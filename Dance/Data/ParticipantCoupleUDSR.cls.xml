<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Data.ParticipantCoupleUDSR">
<Super>Participant</Super>
<TimeCreated>63440,4238.448759</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// Property FullName As %String [ Calculated, SqlComputeCode = {set {FullName} = ##class({%%CLASSNAME}).GetFullName({Couple})}, SqlComputed ];

]]></Content>
</UDLText>

<Property name="Couple">
<Type>CoupleUDSR</Type>
<Required>1</Required>
</Property>

<Index name="CmpCplUDSRIdx">
<Properties>Competition,Couple</Properties>
<Unique>1</Unique>
</Index>

<Method name="ConvertToProxyObject">
<FormalSpec>params:%ZEN.proxyObject</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##super(params)
	set proxy.couple = ..Couple.ConvertToProxyObject()
	
	set proxy.couple.competitionsCount = "-"
	set proxy.couple.paymentsCount = "-"
	
	if $ISOBJECT(proxy.competition.tournament){	
		if (params.loadPrtObjCompetitionsCount){
			&sql(SELECT COUNT(Competition) INTO :proxy.couple.competitionsCount
				 FROM Dance_Data.ParticipantCoupleUDSR 
		    	 WHERE Competition->Tournament = :proxy.competition.tournament.id AND Couple = :proxy.couple.id AND IsActive = 1)
		
			if (##class(MatchingCoupleUDSRWDSF).UDSRIdxExists(..Couple.%Id())){
				set wdsfCoupleId = ##class(MatchingCoupleUDSRWDSF).UDSRIdxOpen(..Couple.%Id()).WDSF.%Id()
				set wdsfCount = 0
				&sql(SELECT COUNT(Competition) INTO :wdsfCount
				 	 FROM Dance_Data.ParticipantCoupleWDSF 
		    	 	 WHERE Competition->Tournament = :proxy.competition.tournament.id AND Couple = :wdsfCoupleId AND IsActive = 1)
			
				set proxy.couple.competitionsCount = proxy.couple.competitionsCount + wdsfCount
			}
		}
		
		if (params.loadPrtObjPaymentsCount){
			&sql(SELECT COUNT(ID) INTO :proxy.couple.paymentsCount
				 FROM Dance_Data.ParticipantCoupleUDSR 
		    	 WHERE Competition->Tournament = :proxy.competition.tournament.id AND Couple = :proxy.couple.id AND TicketStatus = 'Paid' AND IsActive = 1)
		
			if (##class(MatchingCoupleUDSRWDSF).UDSRIdxExists(..Couple.%Id())){
				set wdsfCoupleId = ##class(MatchingCoupleUDSRWDSF).UDSRIdxOpen(..Couple.%Id()).WDSF.%Id()
				set wdsfCount = 0
				&sql(SELECT COUNT(Competition) INTO :wdsfCount
				 	 FROM Dance_Data.ParticipantCoupleWDSF 
		    	 	 WHERE Competition->Tournament = :proxy.competition.tournament.id AND Couple = :wdsfCoupleId AND TicketStatus = 'Paid' AND IsActive = 1)
			
				set proxy.couple.paymentsCount = proxy.couple.paymentsCount + wdsfCount
			}
		}
	}
	
	quit proxy
]]></Implementation>
</Method>

<Method name="Create">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[recorder:Recorder,competition:Competition,couple:%ZEN.proxyObject,&st]]></FormalSpec>
<ReturnType>Participant</ReturnType>
<Implementation><![CDATA[
	if ..CmpCplUDSRIdxExists(competition.%Id(), couple.id) {
		set obj = ..CmpCplUDSRIdxOpen(competition.%Id(), couple.id)
		set obj.IsActive = 1
		set st = obj.%Save()
		quit obj
	}
	
	set obj = ..%New()
	set obj.Recorder = recorder
	set obj.Couple = ##class(Dance.Data.CoupleUDSR).%OpenId(couple.id)
	set obj.Competition = competition
	set obj.PType = "CoupleUDSR" 
	set st = obj.%Save()
	quit obj
]]></Implementation>
</Method>
</Class>
</Export>
