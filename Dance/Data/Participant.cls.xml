<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Data.Participant">
<Description>
Couple - participant of the competition</Description>
<Super>%Persistent</Super>
<TimeCreated>63295,5554.902115</TimeCreated>

<Property name="Competition">
<Type>Dance.Data.Competition</Type>
<Cardinality>one</Cardinality>
<Inverse>Participants</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>
</Property>

<Property name="Tickets">
<Type>Dance.Data.Ticket</Type>
<Cardinality>many</Cardinality>
<Inverse>Participant</Inverse>
<Relationship>1</Relationship>
</Property>

<Property name="PaymentStatus">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {PaymentStatus} = ##class({%%CLASSNAME}).GetPaymentStatus({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="IsActive">
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
<Required>1</Required>
</Property>

<Property name="Created">
<Type>%TimeStamp</Type>
</Property>

<Index name="CompetitionIdx">
<Properties>Competition</Properties>
</Index>

<Method name="ConvertToProxyObject">
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	set proxy.competition = ..Competition.ConvertToProxyObject()
	set proxy.isActive = ..IsActive
	set proxy.created = ..Created
	
	quit proxy
]]></Implementation>
</Method>

<Method name="Deactivate">
<Description>
Change IsActive property to 0</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(Dance.Utils.Journal).Create("Log", "Data.Participant.Deactivate", "ID="_id_";")
	
	set obj = ..%OpenId(id)
	set obj.IsActive = 0
	
	quit obj.%Save()
]]></Implementation>
</Method>

<Method name="%OnNew">
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	set ..Created = $ZDT($ZTS, 3)	
	Quit $$$OK
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
ClassMethod Create(competitionId As %String, coupleId As %String, ByRef st) As Participant
{
	if ..CommonIdxExists(competitionId, coupleId) {
		set obj = ..CommonIdxOpen(competitionId, coupleId)
		set obj.IsActive = 1
		set st = obj.%Save()
		quit obj
	}
	
	set obj = ..%New()
	set obj.Couple = ##class(Dance.Data.Couple).%OpenId(coupleId)
	set obj.Competition = ##class(Dance.Data.Competition).%OpenId(competitionId) 
	set obj.Created = $ZDT($ZTS, 3)
	set st = obj.%Save()
	quit obj
}

ClassMethod GetPaymentStatus(participantId As %String) As %String
{
	set status = "none"
	
	&sql(SELECT TStatus INTO :status FROM Dance_Data.Ticket WHERE Participant = :participantId)	

	quit status
}

ClassMethod GetCoupleCompetitionsCount(competitionId As %String, coupleId As %String) As %Status
{
	set trnId = ""
	&sql(SELECT Competition->Tournament INTO :trnId 
		 FROM Dance_Data.Participant 
		 WHERE Competition = :competitionId AND Couple = :coupleId)
	
	set count = 0
	&sql(SELECT COUNT(ID) INTO :count 
		 FROM Dance_Data.Participant 
		 WHERE IsActive=1 AND Couple = :coupleId AND Competition->Tournament = :trnId)
	
	quit count
}



*/
]]></Content>
</UDLText>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Dance.Data.ParticipantD</DataLocation>
<DefaultData>ParticipantDefaultData</DefaultData>
<IdLocation>^Dance.Data.ParticipantD</IdLocation>
<IndexLocation>^Dance.Data.ParticipantI</IndexLocation>
<StreamLocation>^Dance.Data.ParticipantS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="ParticipantDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Couple</Value>
</Value>
<Value name="3">
<Value>IsPaid</Value>
</Value>
<Value name="4">
<Value>Competition</Value>
</Value>
<Value name="5">
<Value>Created</Value>
</Value>
<Value name="6">
<Value>IsActive</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
