<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Data.Participant">
<Description>
Couple - participant of the competition</Description>
<Super>%Persistent</Super>
<TimeCreated>63295,5554.902115</TimeCreated>

<Property name="FullName">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {FullName} = ##class({%%CLASSNAME}).GetFullName({%%ID}, {PType})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="Recorder">
<Type>Recorder</Type>
<Required>1</Required>
</Property>

<Property name="Competition">
<Type>Competition</Type>
<Required>1</Required>
</Property>

<Property name="Tickets">
<Type>Dance.Data.Ticket</Type>
<Cardinality>many</Cardinality>
<Inverse>Participant</Inverse>
<Relationship>1</Relationship>
</Property>

<Property name="TicketStatus">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {TicketStatus} = ##class({%%CLASSNAME}).GetTicketStatus({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="IsActive">
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
<Required>1</Required>
</Property>

<Property name="PType">
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="Created">
<Type>%TimeStamp</Type>
<Required>1</Required>
</Property>

<Property name="PrtObjCity">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {PrtObjCity} = ##class({%%CLASSNAME}).GetPrtObjCity({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="PrtObjCountry">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {PrtObjCountry} = ##class({%%CLASSNAME}).GetPrtObjCountry({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="PrtObjPaymentsCount">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {PrtObjPaymentsCount} = ##class({%%CLASSNAME}).GetPrtObjPaymentsCount({%%ID}, {Competition})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="PrtObjCompetitionsCount">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {PrtObjCompetitionsCount} = ##class({%%CLASSNAME}).GetPrtObjCompetitionsCount({%%ID}, {Competition})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Index name="CompetitionIdx">
<Properties>Competition</Properties>
</Index>

<Method name="ConvertToProxyObject">
<FormalSpec>params:%ZEN.proxyObject</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	set proxy.id = ..%Id()
	set proxy.competition = ..Competition.ConvertToProxyObject(params.competitionParams)
	set proxy.isActive = ..IsActive
	set proxy.created = ..Created
	set proxy.ticketStatus = ##class(TicketStatus).CodeIdxOpen(..TicketStatus).ConvertToProxyObject()
	
	quit proxy
]]></Implementation>
</Method>

<Method name="GetFullName">
<ClassMethod>1</ClassMethod>
<FormalSpec>prtId:%String,pType:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set fullName = ""
	
	if (pType = "CoupleUDSR"){
		&sql(SELECT Couple->Man->LastName->Value || ' ' || Couple->Man->FirstName->Value || ' - ' ||
					Couple->Woman->LastName->Value || ' ' || Couple->Woman->FirstName->Value INTO :fullName
			 FROM Dance_Data.ParticipantCoupleUDSR
			 WHERE ID = :prtId)
	}
	elseif (pType = "CoupleWDSF"){
		&sql(SELECT Couple->Man->LastName->Value || ' ' || Couple->Man->FirstName->Value || ' - ' ||
					Couple->Woman->LastName->Value || ' ' || Couple->Woman->FirstName->Value INTO :fullName
			 FROM Dance_Data.ParticipantCoupleWDSF
			 WHERE ID = :prtId)
	}
	elseif (pType = "SingleUDSR"){
		&sql(SELECT Athlete->LastName->Value || ' ' || Athlete->FirstName->Value INTO :fullName
			 FROM Dance_Data.ParticipantSingleUDSR
			 WHERE ID = :prtId)
	}
	elseif (pType = "SingleWDSF"){
		&sql(SELECT Athlete->LastName->Value || ' ' || Athlete->FirstName->Value INTO :fullName
			 FROM Dance_Data.ParticipantSingleWDSF
			 WHERE ID = :prtId)
	}
	elseif (pType = "CoupleOther"){
		&sql(SELECT ManLastName || ' ' || ManFirstName || ' - ' || WomanLastName || ' ' || WomanFirstName INTO :fullName
			 FROM Dance_Data.ParticipantCoupleOther
			 WHERE ID = :prtId)
	}
	elseif (pType = "SingleOther"){
		&sql(SELECT LastName || ' ' || FirstName INTO :fullName
			 FROM Dance_Data.ParticipantSingleOther
			 WHERE ID = :prtId)
	}
	
	
	
	quit fullName
	
	
	set fullName = ""
	set prt = ..%OpenId(prtId)
	quit $CASE($CLASSNAME(prt), "Dance.Data.ParticipantCoupleUDSR"  : prt.Couple.GetFullName(),
								"Dance.Data.ParticipantCoupleWDSF"  : prt.Couple.GetFullName(),
								"Dance.Data.ParticipantSingleUDSR"  : prt.Athlete.GetFullName(),
								"Dance.Data.ParticipantSingleWDSF"  : prt.Athlete.GetFullName(),
								"Dance.Data.ParticipantCoupleOther" : prt.ManLastName_" "_prt.ManFirstName_"; "_prt.WomanLastName_" "_prt.WomanFirstName,
								"Dance.Data.ParticipantSingleOther" : prt.LastName_" "_prt.FirstName,
																    : "-")
]]></Implementation>
</Method>

<Method name="Deactivate">
<Description>
Change IsActive property to 0</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(Dance.Utils.Journal).Create("Log", "Data.Participant.Deactivate", "ID="_id_";")
	
	set obj = ..%OpenId(id)
	set obj.IsActive = 0
	
	quit obj.%Save()
]]></Implementation>
</Method>

<Method name="%OnNew">
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	set ..Created = $ZDT($ZTS, 3)	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetTicketStatus">
<ClassMethod>1</ClassMethod>
<FormalSpec>participantId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set status = "Not paid"
	
	&sql(SELECT TStatus->Code INTO :status FROM Dance_Data.Ticket WHERE Participant = :participantId)	

	quit status
]]></Implementation>
</Method>

<Method name="GetPrtObjPaymentsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>prtId:%String,cmpId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	set trnId = "0"
	&sql(SELECT Tournament INTO :trnId FROM Dance_Data.Competition WHERE ID = :cmpId)
	
	set count = 0	
	
	set prtObjId = ""
	if (##class(ParticipantCoupleUDSR).%ExistsId(prtId)){
		&sql(SELECT Couple INTO :prtObjId FROM Dance_Data.ParticipantCoupleUDSR WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantCoupleUDSR WHERE Couple = :prtObjId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
	
		if (##class(MatchingCoupleUDSRWDSF).UDSRIdxExists(prtObjId)){
			set wdsfCoupleId = ##class(MatchingCoupleUDSRWDSF).UDSRIdxOpen(prtObjId).WDSF.%Id()
			set wdsfCount = 0
			&sql(SELECT COUNT(Competition) INTO :wdsfCount
			 	 FROM Dance_Data.ParticipantCoupleWDSF 
	    	 	 WHERE Couple = :wdsfCoupleId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
		
			set count = count + wdsfCount
		}
	}
	elseif (##class(ParticipantCoupleWDSF).%ExistsId(prtId)){
		&sql(SELECT Couple INTO :prtObjId FROM Dance_Data.ParticipantCoupleWDSF WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantCoupleWDSF WHERE Couple = :prtObjId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
		
		if (##class(MatchingCoupleUDSRWDSF).WDSFIdxExists(prtId)){
			set udsrCoupleId = ##class(MatchingCoupleUDSRWDSF).WDSFIdxOpen(prtId).UDSR.%Id()
			set udsrCount = 0
			&sql(SELECT COUNT(Competition) INTO :udsrCount
			 	 FROM Dance_Data.ParticipantCoupleUDSR 
	    	 	 WHERE Couple = :udsrCoupleId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
		
			set count = count + udsrCount
		}
	}
	elseif (##class(ParticipantCoupleOther).%ExistsId(prtId)){
		&sql(SELECT CoupleKey INTO :prtObjId FROM Dance_Data.ParticipantCoupleOther WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantCoupleOther WHERE CoupleKey = :prtObjId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
	}
	if (##class(ParticipantSingleUDSR).%ExistsId(prtId)){
		&sql(SELECT Athlete INTO :prtObjId FROM Dance_Data.ParticipantSingleUDSR WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantSingleUDSR WHERE Athlete = :prtObjId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
	}
	elseif (##class(ParticipantSingleWDSF).%ExistsId(prtId)){
		&sql(SELECT Athlete INTO :prtObjId FROM Dance_Data.ParticipantSingleWDSF WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantSingleWDSF WHERE Athlete = :prtObjId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
	}
	elseif (##class(ParticipantSingleOther).%ExistsId(prtId)){
		&sql(SELECT AthleteKey INTO :prtObjId FROM Dance_Data.ParticipantSingleOther WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantSingleOther WHERE AthleteKey = :prtObjId AND Competition->Tournament = :trnId AND TicketStatus = 'Paid' AND IsActive = 1)
	}
	
	quit count
]]></Implementation>
</Method>

<Method name="GetPrtObjCompetitionsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>prtId:%String,cmpId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	set trnId = "0"
	&sql(SELECT Tournament INTO :trnId FROM Dance_Data.Competition WHERE ID = :cmpId)
	
	set count = 0	
	
	set prtObjId = ""
	if (##class(ParticipantCoupleUDSR).%ExistsId(prtId)){
		&sql(SELECT Couple INTO :prtObjId FROM Dance_Data.ParticipantCoupleUDSR WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantCoupleUDSR WHERE Competition->Tournament = :trnId AND Couple = :prtObjId AND IsActive = 1)
	
		if (##class(MatchingCoupleUDSRWDSF).UDSRIdxExists(prtObjId)){
			set wdsfCoupleId = ##class(MatchingCoupleUDSRWDSF).UDSRIdxOpen(prtObjId).WDSF.%Id()
			set wdsfCount = 0
			&sql(SELECT COUNT(Competition) INTO :wdsfCount
			 	 FROM Dance_Data.ParticipantCoupleWDSF 
	    	 	 WHERE Competition->Tournament = :trnId AND Couple = :wdsfCoupleId AND IsActive = 1)
		
			set count = count + wdsfCount
		}
	}
	elseif (##class(ParticipantCoupleWDSF).%ExistsId(prtId)){
		&sql(SELECT Couple INTO :prtObjId FROM Dance_Data.ParticipantCoupleWDSF WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantCoupleWDSF WHERE Competition->Tournament = :trnId AND Couple = :prtObjId AND IsActive = 1)
		
		if (##class(MatchingCoupleUDSRWDSF).WDSFIdxExists(prtId)){
			set udsrCoupleId = ##class(MatchingCoupleUDSRWDSF).WDSFIdxOpen(prtId).UDSR.%Id()
			set udsrCount = 0
			&sql(SELECT COUNT(Competition) INTO :udsrCount
			 	 FROM Dance_Data.ParticipantCoupleUDSR 
	    	 	 WHERE Competition->Tournament = :trnId AND Couple = :udsrCoupleId AND IsActive = 1)
		
			set count = count + udsrCount
		}
	}
	elseif (##class(ParticipantCoupleOther).%ExistsId(prtId)){
		&sql(SELECT CoupleKey INTO :prtObjId FROM Dance_Data.ParticipantCoupleOther WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantCoupleOther WHERE Competition->Tournament = :trnId AND CoupleKey = :prtObjId AND IsActive = 1)
	}
	if (##class(ParticipantSingleUDSR).%ExistsId(prtId)){
		&sql(SELECT Athlete INTO :prtObjId FROM Dance_Data.ParticipantSingleUDSR WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantSingleUDSR WHERE Competition->Tournament = :trnId AND Athlete = :prtObjId AND IsActive = 1)
	}
	elseif (##class(ParticipantSingleWDSF).%ExistsId(prtId)){
		&sql(SELECT Athlete INTO :prtObjId FROM Dance_Data.ParticipantSingleWDSF WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantSingleWDSF WHERE Competition->Tournament = :trnId AND Athlete = :prtObjId AND IsActive = 1)
	}
	elseif (##class(ParticipantSingleOther).%ExistsId(prtId)){
		&sql(SELECT AthleteKey INTO :prtObjId FROM Dance_Data.ParticipantSingleOther WHERE ID = :prtId)
		&sql(SELECT COUNT(ID) INTO :count FROM Dance_Data.ParticipantSingleOther WHERE Competition->Tournament = :trnId AND AthleteKey = :prtObjId AND IsActive = 1)
	}
	
	quit count
]]></Implementation>
</Method>

<Method name="GetPrtObjCountry">
<ClassMethod>1</ClassMethod>
<FormalSpec>prtId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set country = ""
	
	if (##class(ParticipantCoupleUDSR).%ExistsId(prtId)){
		&sql(SELECT Couple->Man->Country->Name->Value INTO :country FROM Dance_Data.ParticipantCoupleUDSR WHERE ID = :prtId)
	}
	elseif (##class(ParticipantCoupleWDSF).%ExistsId(prtId)){
		&sql(SELECT Couple->Man->Country->Name->Value INTO :country FROM Dance_Data.ParticipantCoupleWDSF WHERE ID = :prtId)
	}
	elseif (##class(ParticipantCoupleOther).%ExistsId(prtId)){
		&sql(SELECT Country->Name->Value INTO :country FROM Dance_Data.ParticipantCoupleOther WHERE ID = :prtId)
	}
	if (##class(ParticipantSingleUDSR).%ExistsId(prtId)){
		&sql(SELECT Athlete->Country->Name->Value INTO :country FROM Dance_Data.ParticipantSingleUDSR WHERE ID = :prtId)
	}
	elseif (##class(ParticipantSingleWDSF).%ExistsId(prtId)){
		&sql(SELECT Athlete->Country->Name->Value INTO :country FROM Dance_Data.ParticipantSingleWDSF WHERE ID = :prtId)
	}
	elseif (##class(ParticipantSingleOther).%ExistsId(prtId)){
		&sql(SELECT Country->Name->Value INTO :country FROM Dance_Data.ParticipantSingleOther WHERE ID = :prtId)
	}
	
	quit country
]]></Implementation>
</Method>

<Method name="GetPrtObjCity">
<ClassMethod>1</ClassMethod>
<FormalSpec>prtId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set city = ""
	
	if (##class(ParticipantCoupleUDSR).%ExistsId(prtId)){
		set manId = ""
		&sql(SELECT Couple->Man INTO :manId FROM Dance_Data.ParticipantCoupleUDSR WHERE ID = :prtId)
		&sql(SELECT City INTO :city FROM Dance_Data.PersonUDSR WHERE ID = :manId)
	}
	elseif (##class(ParticipantCoupleWDSF).%ExistsId(prtId)){
		&sql(SELECT City INTO :city FROM Dance_Data.ParticipantCoupleWDSF WHERE ID = :prtId)
	}
	elseif (##class(ParticipantCoupleOther).%ExistsId(prtId)){
		&sql(SELECT City INTO :city FROM Dance_Data.ParticipantCoupleOther WHERE ID = :prtId)
	}
	if (##class(ParticipantSingleUDSR).%ExistsId(prtId)){
		&sql(SELECT Athlete->City INTO :city FROM Dance_Data.ParticipantSingleUDSR WHERE ID = :prtId)
	}
	elseif (##class(ParticipantSingleWDSF).%ExistsId(prtId)){
		&sql(SELECT City INTO :city FROM Dance_Data.ParticipantSingleWDSF WHERE ID = :prtId)
	}
	elseif (##class(ParticipantSingleOther).%ExistsId(prtId)){
		&sql(SELECT City INTO :city FROM Dance_Data.ParticipantSingleOther WHERE ID = :prtId)
	}
	
	quit city
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Dance.Data.ParticipantD</DataLocation>
<DefaultData>ParticipantDefaultData</DefaultData>
<IdLocation>^Dance.Data.ParticipantD</IdLocation>
<IndexLocation>^Dance.Data.ParticipantI</IndexLocation>
<StreamLocation>^Dance.Data.ParticipantS</StreamLocation>
<Data name="ParticipantDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Recorder</Value>
</Value>
<Value name="3">
<Value>Competition</Value>
</Value>
<Value name="4">
<Value>IsActive</Value>
</Value>
<Value name="5">
<Value>PType</Value>
</Value>
<Value name="6">
<Value>Created</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
