<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Data.Import.TicketDanceplat">
<Description>
Importer tickets from other system</Description>
<Super>%Persistent,%XML.Adaptor,Dance.Data.Import.ImportDanceplat</Super>
<TimeCreated>63438,7002.692458</TimeCreated>

<Parameter name="CorrelateName">
<Type>%String</Type>
<Default>item</Default>
</Parameter>

<Property name="IdInternal">
<Type>%String</Type>
<Parameter name="XMLNAME" value="biletId"/>
</Property>

<Property name="TournamentIdExternal">
<Type>%String</Type>
<Parameter name="XMLNAME" value="tournirId"/>
</Property>

<Property name="GroupIdInternal">
<Type>%String</Type>
<Parameter name="XMLNAME" value="GroupId"/>
</Property>

<Property name="MaleLastName">
<Description>
Male</Description>
<Type>%String</Type>
<Parameter name="XMLNAME" value="SurnameM"/>
</Property>

<Property name="MaleFirstName">
<Type>%String</Type>
<Parameter name="XMLNAME" value="NameM"/>
</Property>

<Property name="MaleNumber">
<Type>%String</Type>
<Parameter name="XMLNAME" value="cplMalePartnerID"/>
</Property>

<Property name="MaleDOBOrAge">
<Type>%String</Type>
<Parameter name="XMLNAME" value="AgeM"/>
</Property>

<Property name="FemaleLastName">
<Description>
Female</Description>
<Type>%String</Type>
<Parameter name="XMLNAME" value="SurnameF"/>
</Property>

<Property name="FemaleFirstName">
<Type>%String</Type>
<Parameter name="XMLNAME" value="NameF"/>
</Property>

<Property name="FemaleNumber">
<Type>%String</Type>
<Parameter name="XMLNAME" value="cplFemalePartnerID"/>
</Property>

<Property name="FemaleDOBOrAge">
<Type>%String</Type>
<Parameter name="XMLNAME" value="AgeF"/>
</Property>

<Property name="Trainers">
<Description>
Other Info</Description>
<Type>%Text</Type>
<Parameter name="MAXLEN" value="3000"/>
<Parameter name="XMLNAME" value="Trener"/>
</Property>

<Property name="City">
<Type>%String</Type>
<Parameter name="XMLNAME" value="City"/>
</Property>

<Property name="Club">
<Type>%String</Type>
<Parameter name="XMLNAME" value="Club"/>
</Property>

<Property name="Amount">
<Type>%String</Type>
<Parameter name="XMLNAME" value="sum"/>
</Property>

<Property name="TDay">
<Type>%String</Type>
<Parameter name="XMLNAME" value="day"/>
</Property>

<Property name="TStatus">
<Type>%String</Type>
<Parameter name="XMLNAME" value="status"/>
</Property>

<Property name="PaymentCreated">
<Type>%String</Type>
<Parameter name="XMLNAME" value="datepay"/>
</Property>

<Property name="OrderIdInternal">
<Type>%String</Type>
<Parameter name="XMLNAME" value="ZakazId"/>
</Property>

<Property name="CodeOne">
<Type>%String</Type>
<Parameter name="XMLNAME" value="kod"/>
</Property>

<Property name="CodeTwo">
<Type>%String</Type>
<Parameter name="XMLNAME" value="kodtwo"/>
</Property>

<Property name="Description">
<Type>%Text</Type>
<Parameter name="MAXLEN" value="3000"/>
<Parameter name="XMLNAME" value="description"/>
</Property>

<Index name="IdInternalIdx">
<Properties>IdInternal</Properties>
<Unique>1</Unique>
</Index>

<Method name="Save">
<Description>
Create or update ticket</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>newObj:Dance.Data.Import.Ticket</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set newObj.Description = $REPLACE($REPLACE(newObj.Description, $c(10), ""), "&quot;", """")
	
	if (..IdInternalIdxExists(newObj.IdInternal) = 0){
		quit newObj.%Save()
	}
	
	set oldObj = ..IdInternalIdxOpen(newObj.IdInternal)
	set oldObj.Amount = newObj.Amount
	set oldObj.City = newObj.City
	set oldObj.Club = newObj.Club
	set oldObj.CodeOne = newObj.CodeOne
	set oldObj.CodeTwo = newObj.CodeTwo
	//set oldObj.Created = newObj.Created
	set oldObj.Description = newObj.Description
	set oldObj.FemaleDOBOrAge = newObj.FemaleDOBOrAge
	set oldObj.FemaleFirstName = newObj.FemaleFirstName
	set oldObj.FemaleLastName = newObj.FemaleLastName
	set oldObj.FemaleNumber = newObj.FemaleNumber
	set oldObj.GroupIdInternal = newObj.GroupIdInternal
	set oldObj.MaleDOBOrAge = newObj.MaleDOBOrAge
	set oldObj.MaleFirstName = newObj.MaleFirstName
	set oldObj.MaleLastName = newObj.MaleLastName
	set oldObj.MaleNumber = newObj.MaleNumber
	set oldObj.OrderIdInternal = newObj.OrderIdInternal
	set oldObj.TournamentIdExternal = newObj.TournamentIdExternal
	set oldObj.Trainers = newObj.Trainers
	set oldObj.TStatus = newObj.TStatus	
			
	quit oldObj.%Save()
]]></Implementation>
</Method>

<Method name="CreatePersonFromTicket">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[ticket:Dance.Data.Import.Ticket,isMan:%Boolean,&st]]></FormalSpec>
<ReturnType>Dance.Data.Person</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	set person = ""
	
	try{
		TSTART
		
		do ##class(Dance.Utils.Journal).Create("Log", "Import.Ticket.CreatePersonFromTicket", "Start, isMan="_isMan_", prtMaleLastName="_ticket.MaleLastName_", prtFemaleLastName="_ticket.FemaleLastName)
		
		set person = ##class(Dance.Data.Person).%New()
		
		if (isMan){
			set person.Gender = "M"
			set person.LastName = ##class(Dance.Data.Localization.LText).Create($REPLACE(ticket.MaleLastName,$C(10),""))
			set person.FirstName = ##class(Dance.Data.Localization.LText).Create($REPLACE(ticket.MaleFirstName,$C(10),""))
			if ($LENGTH($REPLACE(ticket.MaleDOBOrAge,$C(10),"")) = 10) set person.DOB = $ZDH(ticket.MaleDOBOrAge, 3)
		}
		else{
			set person.Gender = "F"
			set person.LastName = ##class(Dance.Data.Localization.LText).Create($REPLACE(ticket.FemaleLastName,$C(10),""))
			set person.FirstName = ##class(Dance.Data.Localization.LText).Create($REPLACE(ticket.FemaleFirstName,$C(10),""))
			if ($LENGTH($REPLACE(ticket.FemaleDOBOrAge,$C(10),"")) = 10) set person.DOB = $ZDH(ticket.FemaleDOBOrAge, 3)
		}
		
		set person.City = $REPLACE(ticket.City,$C(10),"")
		set person.Club = $REPLACE(ticket.Club,$C(10),"")
		set person.MainTrainer = $P($REPLACE(ticket.Trainers,$C(10),""), ", ", 1)
		set person.OtherTrainers = $P($REPLACE(ticket.Trainers,$C(10),""), ", ", 2, *)
		set person.LastUpdated = $ZDT($ZTS, 3)
		
		$$$THROWONERROR(st, person.%Save())
		
		do ##class(Dance.Utils.Journal).Create("Log", "Import.Ticket.CreatePersonFromTicket", "End")
		
		TCOMMIT
	}
	catch(ex){
		TROLLBACK 1
		set st = ex.AsStatus()
		do ##class(Dance.Utils.Journal).Create("ERROR", "Import.Ticket.CreatePersonFromTicket", st)
		
	}
	
	quit person
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
Example:

<item>
	<biletId>754645</biletId>
	<tournirId>68</tournirId>
	<GroupId>1345</GroupId>	
	<cplMalePartnerID>10345</cplMalePartnerID>
	<SurnameM>Елагин</SurnameM>
	<NameM>Андрей</NameM>
	<AgeM>10</AgeM>
	<cplFemalePartnerID>10345</cplFemalePartnerID>
	<SurnameF>Морозова</SurnameF>
	<NameF>Виктория</NameF>
	<AgeF>11</AgeF>
	<Club><![CDATA[Ритм]]]]><![CDATA[></Club>
	<City><![CDATA[Сыктывкар]]]]><![CDATA[>
	</City>
	<Trener><![CDATA[Шульц Елена, Горохов Александр]]]]><![CDATA[>	</Trener>
	<status>pay</status>
	<sum>600.00</sum>
	<datepay>2014-04-07 20:26:07</datepay>
	<day>2014-05-09</day>
	<ZakazId>345345</ZakazId>
	<kod>45345345ee</kod>
	<kodtwo>erwer4353</kodtwo>
	
	<description><![CDATA[09 Мая 2014 10:00  XIX Кубок ЦСКА &quot;Вальс Победы&quot; 9-11 мая 2014. Дети-2 D E St<br> <strong>Партнер</strong>: Елагин Андрей, Книжка: 105500<br> <strong>Партнерша</strong>: Морозова Виктория, Книжка: 105490 <br>]]]]><![CDATA[></description>
</item>

*/
]]></Content>
</UDLText>
</Class>
</Export>
