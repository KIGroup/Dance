<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Data.Tournament">
<Description>
Tournaments</Description>
<Super>%Persistent</Super>
<TimeCreated>63274,63417.76954</TimeCreated>

<Parameter name="JsonClass">
<Default>Dance.Web.JsonTournament</Default>
</Parameter>

<Property name="IdInternal">
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="IdExternal">
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="Hash">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="Name">
<Type>Dance.Data.Localization.LText</Type>
<Required>1</Required>
</Property>

<Property name="FullName">
<Type>Dance.Data.Localization.LText</Type>
<Required>1</Required>
</Property>

<Property name="Country">
<Type>Country</Type>
<Required>1</Required>
</Property>

<Property name="City">
<Type>Dance.Data.Localization.LText</Type>
<Required>1</Required>
</Property>

<Property name="StartDate">
<Type>%Date</Type>
<Parameter name="FORMAT" value="3"/>
</Property>

<Property name="EndDate">
<Type>%Date</Type>
<Parameter name="FORMAT" value="3"/>
</Property>

<Property name="OrganizerInfo">
<Type>Dance.Data.Localization.LText</Type>
<Required>1</Required>
</Property>

<Property name="OrganizerSite">
<Type>%String</Type>
<Parameter name="MAXLEN" value="500"/>
</Property>

<Property name="TRank">
<Type>Dance.Data.TournamentRank</Type>
<Required>1</Required>
</Property>

<Property name="TStatus">
<Type>Dance.Data.TournamentStatus</Type>
<Required>1</Required>
</Property>

<Property name="CompetitionsCount">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {CompetitionsCount} = ##class({%%CLASSNAME}).GetCompetitionsCount({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="ParticipantsCount">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {ParticipantsCount} = ##class({%%CLASSNAME}).GetParticipantsCount({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="ParticipantsUniqueCount">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {ParticipantsUniqueCount} = ##class({%%CLASSNAME}).GetParticipantsUniqueCount({%%ID})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="Competitions">
<Type>Dance.Data.Competition</Type>
<Cardinality>many</Cardinality>
<Inverse>Tournament</Inverse>
<Relationship>1</Relationship>
</Property>

<Property name="IsActive">
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
<Required>1</Required>
</Property>

<Property name="TabUDSRAllowed">
<Type>%Boolean</Type>
<Required>1</Required>
</Property>

<Property name="TabWDSFAllowed">
<Type>%Boolean</Type>
<Required>1</Required>
</Property>

<Property name="TabOtherAllowed">
<Type>%Boolean</Type>
<Required>1</Required>
</Property>

<Index name="IdInternalIdx">
<Properties>IdInternal</Properties>
<Unique>1</Unique>
</Index>

<Index name="IdExternalIdx">
<Properties>IdExternal</Properties>
<Unique>1</Unique>
</Index>

<Method name="Save">
<Description>
Create or Update object</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[data:%RegisteredObject,&st]]></FormalSpec>
<ReturnType>Tournament</ReturnType>
<Implementation><![CDATA[
	do ##class(Dance.Utils.Journal).Create("Log", "Data.Tournament.Save",
	"ID="_data.id_";"_
	"IdInternal="_data.idInternal_";"_
	"IdExternal="_data.idExternal_";"_
	"Hash="_data.hash_";"_
	"Name="_$ZCVT(data.name,"I", "UTF8")_";"_
	"TStatusId="_data.status.id_";"_
	"TRankId="_data.rank.id_";"_
	"CountryId="_data.location.country.id_";"_
	"City="_data.location.cityName_";"_
	"StartDate="_data.startDate_";"_
	"endDate="_data.startDate)
	
	set trn = ""
	if (data.id = ""){
		set trn = ##class(Dance.Data.Tournament).%New()
      	set trn.Name = ##class(Dance.Data.Localization.LText).Create($ZCVT(data.name, "I", "UTF8"))
      	set trn.FullName = ##class(Dance.Data.Localization.LText).Create($ZCVT(data.fullName, "I", "UTF8"))
      	set trn.City = ##class(Dance.Data.Localization.LText).Create($ZCVT(data.location.cityName, "I", "UTF8"))
      	set trn.OrganizerInfo = ##class(Dance.Data.Localization.LText).Create($ZCVT(data.organizer.info, "I", "UTF8"))
    }
    else{
	    set trn = ##class(Dance.Data.Tournament).%OpenId(data.id)
      	set trn.Name.Value = $ZCVT(data.name, "I", "UTF8")
      	set trn.FullName.Value = $ZCVT(data.fullName, "I", "UTF8")
      	set trn.City.Value = $ZCVT(data.location.cityName, "I", "UTF8")
      	set trn.OrganizerInfo.Value = $ZCVT(data.organizer.info, "I", "UTF8")
   	}
      	
    set trn.IdInternal = data.idInternal
    set trn.IdExternal = data.idExternal
    set trn.Hash = data.hash
      	
    set trn.OrganizerSite = $ZCVT(data.organizer.site, "I", "UTF8")
    
   	set trn.Country = ##class(Dance.Data.Country).%OpenId(data.location.country.id)
    set trn.TStatus = ##class(Dance.Data.TournamentStatus).%OpenId(data.status.id)
    set trn.TRank = ##class(Dance.Data.TournamentRank).%OpenId(data.rank.id)
      	
    set trn.StartDate = $ZDATEH(data.startDate, 15)
    set trn.EndDate = $ZDATEH(data.endDate, 15)
    
    set trn.TabUDSRAllowed = data.tabUDSRAllowed = $$$YES
    set trn.TabWDSFAllowed = data.tabWDSFAllowed = $$$YES
    set trn.TabOtherAllowed = data.tabOtherAllowed = $$$YES
         		
    set st = trn.%Save()
    		
	quit trn
]]></Implementation>
</Method>

<Method name="Deactivate">
<Description>
Change IsActive property to 0</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(Dance.Utils.Journal).Create("Log", "Data.Tournament.Deactivate", "ID="_id_";")
	
	set trn = ..%OpenId(id)
	set trn.IsActive = 0
	set trn.IdInternal = trn.IdInternal_";"_id
	set trn.IdExternal = trn.IdExternal_";"_id
	set trn.Hash = trn.Hash_";"_id
	
	for i=1:1:trn.Competitions.Count(){
		set st = ##class(Dance.Data.Competition).Deactivate(trn.Competitions.GetAt(i).%Id())
		if $$$ISERR(st) return st
	}
	
	quit trn.%Save()
]]></Implementation>
</Method>

<Method name="CheckDeletePrivilege">
<Description>
Check delete privilege</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	SET SQLCODE=""
	&sql(%CHECKPRIV DELETE ON Dance_Data.Tournament)
	if (SQLCODE = 100) quit ##class(Dance.Utils.Msg).GetErrorStatus("NoPrivilegeForDelete", " USERNAME="_$USERNAME)
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="CheckUpdatePrivilege">
<Description>
Check update privilege</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	SET SQLCODE=""
	&sql(%CHECKPRIV UPDATE ON Dance_Data.Tournament)
	if (SQLCODE = 100) quit ##class(Dance.Utils.Msg).GetErrorStatus("NoPrivilegeForUpdate", " USERNAME="_$USERNAME)
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="GetCompetitionsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>tournamentId:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set count = 0
	&sql(SELECT COUNT(ID) INTO :count 
		 FROM Dance_Data.Competition 
		 WHERE Tournament = :tournamentId)
		 
	quit count
]]></Implementation>
</Method>

<Method name="GetParticipantsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>tournamentId:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set count = 0
	&sql(SELECT COUNT(ID) INTO :count
		 FROM Dance_Data.Participant 
		 WHERE Competition->Tournament = :tournamentId)
	
	quit count
]]></Implementation>
</Method>

<Method name="GetParticipantsUniqueCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>tournamentId:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set count = 0
	&sql(SELECT COUNT(DISTINCT Couple) INTO :count
		 FROM Dance_Data.Participant 
		 WHERE Competition->Tournament = :tournamentId)
	
	quit count
]]></Implementation>
</Method>

<Method name="GetPersonByFullNameFromTournament">
<ClassMethod>1</ClassMethod>
<FormalSpec>trnId:%String,lastName:%String,firstName:%String</FormalSpec>
<ReturnType>Dance.Data.Person</ReturnType>
<Implementation><![CDATA[
	set id = ""
	
	&sql(SELECT DISTINCT person.ID INTO :id
		 FROM Dance_Data.Person as person INNER JOIN 
		 Dance_Data_Localization.LTextValue as ltvalLN ON ltvalLN.LText = person.LastName INNER JOIN 
		 Dance_Data_Localization.LTextValue as ltvalFN ON ltvalFN.LText = person.FirstName INNER JOIN
		(SELECT prt.Couple->Man As Man, prt.Couple->Woman As Woman
 		 FROM Dance_Data.Participant as prt
 		 WHERE prt.Competition->Tournament = :trnId) as prtTab ON prtTab.Man = person.ID OR prtTab.Woman = person.ID
		 WHERE ltvalLN.Value = :lastName AND ltvalFN.Value = :firstName)
	
	quit ##class(Dance.Data.Person).%OpenId(id)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Dance.Data.TournamentD</DataLocation>
<DefaultData>TournamentDefaultData</DefaultData>
<IdLocation>^Dance.Data.TournamentD</IdLocation>
<IndexLocation>^Dance.Data.TournamentI</IndexLocation>
<StreamLocation>^Dance.Data.TournamentS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="TournamentDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Title</Value>
</Value>
<Value name="3">
<Value>StartDate</Value>
</Value>
<Value name="4">
<Value>EndDate</Value>
</Value>
<Value name="5">
<Value>OrganizerSite</Value>
</Value>
<Value name="6">
<Value>TClass</Value>
</Value>
<Value name="7">
<Value>Name</Value>
</Value>
<Value name="8">
<Value>TRank</Value>
</Value>
<Value name="9">
<Value>TStatus</Value>
</Value>
<Value name="10">
<Value>OrganizerInfo</Value>
</Value>
<Value name="11">
<Value>Country</Value>
</Value>
<Value name="12">
<Value>City</Value>
</Value>
<Value name="13">
<Value>TournirId</Value>
</Value>
<Value name="14">
<Value>TournirIdExt</Value>
</Value>
<Value name="15">
<Value>IdInternal</Value>
</Value>
<Value name="16">
<Value>Hash</Value>
</Value>
<Value name="17">
<Value>IdExternal</Value>
</Value>
<Value name="18">
<Value>IsRemoved</Value>
</Value>
<Value name="19">
<Value>IsActive</Value>
</Value>
<Value name="20">
<Value>FullName</Value>
</Value>
<Value name="21">
<Value>TabUDSRAllowed</Value>
</Value>
<Value name="22">
<Value>TabWDSFAllowed</Value>
</Value>
<Value name="23">
<Value>TabOtherAllowed</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
