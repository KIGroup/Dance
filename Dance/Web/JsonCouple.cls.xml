<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Web.JsonCouple">
<Super>Dance.Web.JsonBase</Super>
<TimeCreated>63295,828.51419</TimeCreated>

<Method name="ConvertToProxyObject">
<Description>
Convert "Couple" object to %ZEN.proxyObject (for JSON)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>object:Dance.Data.Couple,convertParams:%ZEN.proxyObject=""</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	try{
		if '$ISOBJECT(convertParams) set convertParams = ##class(%ZEN.proxyObject).%New()
		
		set proxy.id = object.%Id()
		set proxy.man = ##class(JsonPerson).ConvertToProxyObject(object.Man)
		set proxy.woman = ##class(JsonPerson).ConvertToProxyObject(object.Woman)
		
		set proxy.otherInfo = ##class(%ZEN.proxyObject).%New()
		set proxy.otherInfo.country = ##class(JsonCountry).ConvertToProxyObject(object.Man.Country)
			
		if (object.Man.NumberWDSF = "") && (object.Woman.NumberWDSF = ""){
			set club = object.Man.Club
			if (club = "") set club = object.Woman.Club 
		
			set mainTrainer = object.Man.MainTrainer
			if (mainTrainer = "") set mainTrainer = object.Woman.MainTrainer 
		
			set otherTrainers = object.Man.OtherTrainers
			if (otherTrainers = "") set otherTrainers = object.Woman.OtherTrainers
		
			set proxy.otherInfo.city = object.Man.City
			set proxy.otherInfo.club = club
			set proxy.otherInfo.mainTrainer = mainTrainer
			set proxy.otherInfo.otherTrainers = otherTrainers
		}
		elseif (convertParams.tournamentId '= ""){
			set coupleInfo = ..GetWDSFOtherInfoForTournament(convertParams.tournamentId, proxy.id)
			set proxy.man.dob = coupleInfo.manDob
			set proxy.woman.dob = coupleInfo.womanDob
			set proxy.otherInfo.city = coupleInfo.city
			set proxy.otherInfo.club = coupleInfo.club
			set proxy.otherInfo.mainTrainer = coupleInfo.mainTrainer
			set proxy.otherInfo.otherTrainers = coupleInfo.otherTrainers
		}
	}
	catch(ex){
		set proxy = ##class(%ZEN.proxyObject).%New()
	}
	
	quit proxy
]]></Implementation>
</Method>

<Method name="WriteObjectByIdToDevice">
<Description>
Open object by id, convert to proxy and write to device</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ..ConvertToProxyObject(##class(Dance.Data.Couple).%OpenId(id)).%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="WriteAllForGridToDevice">
<Description>
Write objects to device, page by page for grid.</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	try{
		$$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.params, 1))
 		
 		set whereCondition = "Competition->Tournament = '"_..ParseParameter(params.other.tournamentId)_"'"     	
 		
      	$$$THROWONERROR(st, ..WriteJsonForGrid("SELECT DISTINCT(Couple) FROM Dance_Data.Participant", "Dance.Data.Couple", params, whereCondition))
	}
	catch ex {
		set st = ex.AsStatus()
	}

	quit st
]]></Implementation>
</Method>

<Method name="WriteUDSRByNumbersToDevice">
<Description>
Couple data by UDSR numbers</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>manNumber:%String,womanNumber:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	try{
		set man = ##class(Dance.Data.Person).GetByNumberUSDR(manNumber)
		set woman = ##class(Dance.Data.Person).GetByNumberUSDR(womanNumber)
		
		if '$ISOBJECT(man) && '$ISOBJECT(woman){
			$$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("CoupleNotFound"))
		}
		
		if $ISOBJECT(man) && (womanNumber = "0"){
			set woman = man
		}
		elseif $ISOBJECT(woman) && (manNumber = "0"){
			set man = woman
		}
		
		set couple = ##class(Dance.Data.Couple).Create(man.%Id(), woman.%Id())
		set proxy  = ..ConvertToProxyObject(couple)
		do proxy.%ToJSON()	
	}
	catch(ex){
		set st = ex.AsStatus()
	}
	
	quit st
]]></Implementation>
</Method>

<Method name="WriteWDSFByNumbersToDevice">
<Description>
Couple data by WDSF numbers</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>manNumber:%String,womanNumber:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	try{
		TSTART
		
		set coupleWDSFData = ##class(Dance.Wdsf.ControllerAPI).GetCoupleByNumbers(manNumber, womanNumber, .st)
		if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("WdsfCoupleNotFound", "| "_coupleWDSFData.message))
		
		set manWDSF = coupleWDSFData.man
		set womanWDSF = coupleWDSFData.woman
		
		// Create or update wdsf male dancer
		set manDB = ##class(Dance.Data.Person).GetByNumberWDSF(manNumber)
				
		if $ISOBJECT(manWDSF) && (manWDSF.id '= ""){	
			set manCountry = ##class(Dance.Data.Country).WDSFNameIdxOpen(manWDSF.country)
			
			set proxy.man = ##class(%ZEN.proxyObject).%New()
			set proxy.man.gender = $E(manWDSF.sex,1,1)
			set proxy.man.numberWDSF = manWDSF.id
			set proxy.man.lastName = manWDSF.surname
			set proxy.man.firstName = manWDSF.name
			set proxy.man.otherInfo = ##class(%ZEN.proxyObject).%New()
			set proxy.man.otherInfo.country = ##class(Dance.Web.JsonCountry).ConvertToProxyObject(manCountry)
			
			// For update by id, if man already exists
			if $ISOBJECT(manDB){
				set proxy.man.id = manDB.%Id()
			}
			
			set manDB = ##class(Dance.Data.Person).Save(proxy.man, .st)
			if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("WdsfManSaveError"))
			
			set proxy.man.id = manDB.%Id()
		}

		// Create or update wdsf female dancer
		set womanDB = ##class(Dance.Data.Person).GetByNumberWDSF(womanNumber)
				
		if $ISOBJECT(womanWDSF) && (womanWDSF.id '= ""){	
			set womanCountry = ##class(Dance.Data.Country).WDSFNameIdxOpen(womanWDSF.country)
			
			set proxy.woman = ##class(%ZEN.proxyObject).%New()
			set proxy.woman.gender = $E(womanWDSF.sex,1,1)
			set proxy.woman.numberWDSF = womanWDSF.id
			set proxy.woman.lastName = womanWDSF.surname
			set proxy.woman.firstName = womanWDSF.name
			set proxy.woman.otherInfo = ##class(%ZEN.proxyObject).%New()
			set proxy.woman.otherInfo.country = ##class(Dance.Web.JsonCountry).ConvertToProxyObject(womanCountry)
			
			// For update by id, if man already exists
			if $ISOBJECT(womanDB){
				set proxy.woman.id = womanDB.%Id()
			}
			
			set womanDB = ##class(Dance.Data.Person).Save(proxy.woman, .st)
			if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("WdsfWomanSaveError"))
			
			set proxy.woman.id = womanDB.%Id()
		}
		elseif $ISOBJECT(womanDB){
			set proxy.woman = ##class(JsonPerson).ConvertToProxyObject(womanDB)
		}
		
		if $ISOBJECT(proxy.man) && (womanNumber = "0"){
			set proxy.woman = proxy.man
		}
		elseif $ISOBJECT(proxy.woman) && (manNumber = "0"){
			set proxy.man = proxy.woman
		}
				
		// Create couple for dancers
		set couple = ##class(Dance.Data.Couple).Create(proxy.man.id, proxy.woman.id, .st)
		set proxy.id = couple.%Id()
		
		set coupleInfo =..GetFreshestWDSFOtherInfo(couple.%Id())
		
		if (proxy.otherInfo = ""){
			set proxy.otherInfo = ##class(%ZEN.proxyObject).%New()
		}
		
		if (proxy.man.dob = ""){
			set proxy.man.dob = coupleInfo.manDob 
		}
		
		if (proxy.woman.dob = ""){
			set proxy.woman.dob = coupleInfo.womanDob 
		}
		
		if (proxy.otherInfo.city = ""){
			set proxy.otherInfo.city = coupleInfo.city
		}
		
		if (proxy.otherInfo.club = ""){
			set proxy.otherInfo.club = coupleInfo.club
		}
		
		if (proxy.otherInfo.mainTrainer = ""){
			set proxy.otherInfo.mainTrainer = coupleInfo.mainTrainer
		}
		
		if (proxy.otherInfo.otherTrainers = ""){
			set proxy.otherInfo.otherTrainers = coupleInfo.otherTrainers
		}
		
		do proxy.%ToJSON()

		TCOMMIT
	}
	catch(ex){
		TROLLBACK
		
		set st = ex.AsStatus()
	}
	
	quit st
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
/// Couple data by WDSF numbers
ClassMethod WriteWDSFByNumbersToDevice(manNumber As %String, womanNumber As %String) As %Status
{
	set st = $$$OK
	
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	try{
		TSTART
		
		// Create or update wdsf male dancer
		set manDB = ##class(Dance.Data.Person).GetByNumberWDSF(manNumber)
		set manWDSF = ##class(Dance.Wdsf.API).GetPerson(manNumber)
				
		if $ISOBJECT(manWDSF) && (manWDSF.id '= ""){	
			set manCountry = ##class(Dance.Data.Country).WDSFNameIdxOpen(manWDSF.country)
			//set manAgeGroup = ##class(Dance.Data.AgeCategoryWDSF).CodeIdxOpen(manWDSF.ageGroup)
			
			set proxy.man = ##class(%ZEN.proxyObject).%New()
			set proxy.man.gender = $E(manWDSF.sex,1,1)
			set proxy.man.numberWDSF = manWDSF.id
			set proxy.man.lastName = manWDSF.surname
			set proxy.man.firstName = manWDSF.name
			//set proxy.man.ageCategoryWDSFName = manAgeGroup.Name.Value
			//set proxy.man.minAge = manAgeGroup.MinAge
			//set proxy.man.maxAge = manAgeGroup.MaxAge
			//set proxy.man.minDOB = $ZD(manAgeGroup.MinDOB,3)
			//set proxy.man.maxDOB = $ZD(manAgeGroup.MaxDOB,3)
			set proxy.man.otherInfo = ##class(%ZEN.proxyObject).%New()
			set proxy.man.otherInfo.country = ##class(Dance.Web.JsonCountry).ConvertToProxyObject(manCountry)
			
			// For update by id, if man already exists
			if $ISOBJECT(manDB){
				set proxy.man.id = manDB.%Id()
			}
			
			set manDB = ##class(Dance.Data.Person).Save(proxy.man, .st)
			if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("WdsfManSaveError"))
			
			set proxy.man.id = manDB.%Id()
		}
		elseif $ISOBJECT(manDB){
			//set proxy.man = ##class(JsonPerson).ConvertToProxyObject(manDB)
			//&sql(SELECT ID INTO :ageGroupWDSFId FROM Dance_Data.AgeCategoryWDSF WHERE MinDOB = TO_DATE(:manDB.MinDOB,'YYYY-MM-DD') AND MaxDOB = TO_DATE(:manDB.MaxDOB,'YYYY-MM-DD'))
			
			//set minAge = $P($ZD($NOW(), 3), "-", 1) - $P($ZD(manDB.MaxDOB, 3), "-", 1)
			//set maxAge = $P($ZD($NOW(), 3), "-", 1) - $P($ZD(manDB.MinDOB, 3), "-", 1)
			//&sql(SELECT ID INTO :ageGroupWDSFId FROM Dance_Data.AgeCategoryWDSF WHERE MinAge = :minAge AND MaxAge = :maxAge)
			//set manAgeGroup = ##class(Dance.Data.AgeCategoryWDSF).%OpenId(ageGroupWDSFId)
			//set proxy.man.ageCategoryWDSFName = manAgeGroup.Name.Value
			//set proxy.man.minAge = manAgeGroup.MinAge
			//set proxy.man.maxAge = manAgeGroup.MaxAge
		}

		// Create or update wdsf female dancer
		set womanDB = ##class(Dance.Data.Person).GetByNumberWDSF(womanNumber)
		set womanWDSF = ##class(Dance.Wdsf.API).GetPerson(womanNumber)
				
		if $ISOBJECT(womanWDSF) && (womanWDSF.id '= ""){	
			set womanCountry = ##class(Dance.Data.Country).WDSFNameIdxOpen(womanWDSF.country)
			set womanAgeGroup = ##class(Dance.Data.AgeCategoryWDSF).CodeIdxOpen(womanWDSF.ageGroup)
			
			set proxy.woman = ##class(%ZEN.proxyObject).%New()
			set proxy.woman.gender = $E(womanWDSF.sex,1,1)
			set proxy.woman.numberWDSF = womanWDSF.id
			set proxy.woman.lastName = womanWDSF.surname
			set proxy.woman.firstName = womanWDSF.name
			//set proxy.woman.ageCategoryWDSFName = womanAgeGroup.Name.Value
			//set proxy.woman.minAge = womanAgeGroup.MinAge
			//set proxy.woman.maxAge = womanAgeGroup.MaxAge
			//set proxy.woman.minDOB = $ZD(womanAgeGroup.MinDOB,3)
			//set proxy.woman.maxDOB = $ZD(womanAgeGroup.MaxDOB,3)
			set proxy.woman.otherInfo = ##class(%ZEN.proxyObject).%New()
			set proxy.woman.otherInfo.country = ##class(Dance.Web.JsonCountry).ConvertToProxyObject(womanCountry)
			
			// For update by id, if man already exists
			if $ISOBJECT(womanDB){
				set proxy.woman.id = womanDB.%Id()
			}
			
			set womanDB = ##class(Dance.Data.Person).Save(proxy.woman, .st)
			if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("WdsfWomanSaveError"))
			
			set proxy.woman.id = womanDB.%Id()
		}
		elseif $ISOBJECT(womanDB){
			set proxy.woman = ##class(JsonPerson).ConvertToProxyObject(womanDB)
		}
		
		if $ISOBJECT(proxy.man) && (womanNumber = "0"){
			set proxy.woman = proxy.man
		}
		elseif $ISOBJECT(proxy.woman) && (manNumber = "0"){
			set proxy.man = proxy.woman
		}
		
		// Swap data
		if (proxy.man.gender = "F") && (proxy.woman.gender = "M"){
			set temp = proxy.man
			set proxy.man = proxy.woman
			set proxy.woman = temp
		}
		
		// Crate couple for dancers
		set couple = ##class(Dance.Data.Couple).Create(proxy.man.id, proxy.woman.id, .st)
		set proxy.id = couple.%Id()
		
		set coupleInfo =..GetFreshestWDSFOtherInfo(couple.%Id())
		
		if (proxy.otherInfo = ""){
			set proxy.otherInfo = ##class(%ZEN.proxyObject).%New()
		}
		
		if (proxy.man.dob = ""){
			set proxy.man.dob = coupleInfo.manDob 
		}
		
		if (proxy.woman.dob = ""){
			set proxy.woman.dob = coupleInfo.womanDob 
		}
		
		if (proxy.otherInfo.city = ""){
			set proxy.otherInfo.city = coupleInfo.city
		}
		
		if (proxy.otherInfo.club = ""){
			set proxy.otherInfo.club = coupleInfo.club
		}
		
		if (proxy.otherInfo.mainTrainer = ""){
			set proxy.otherInfo.mainTrainer = coupleInfo.mainTrainer
		}
		
		if (proxy.otherInfo.otherTrainers = ""){
			set proxy.otherInfo.otherTrainers = coupleInfo.otherTrainers
		}
		
		do proxy.%ToJSON()

		TCOMMIT
	}
	catch(ex){
		TROLLBACK
		
		set st = ex.AsStatus()
	}
	
	quit st
}

*/
]]></Content>
</UDLText>

<Method name="RegistrationExistingCouple">
<Description>
Registration UDSR or WDSF couple in the tournament</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	try{
		TSTART
		
		$$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content.Read(),,.data, 1))
      	
      	set couple = ##class(Dance.Data.Couple).CommonIdxOpen(data.man.id, data.woman.id)
      	
      	set competition = ""
      	
      	for i=1:1:data.competitions.Count(){
	    	set competition = ##class(Dance.Data.Competition).%OpenId(data.competitions.GetAt(i).id)
	    	if (competition.Tournament.TStatus.Code '= "Registration") {
		    	$$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("RegistrationClosedError"))
	    	}
	    	
	    	do ##class(Dance.Data.Participant).Create(competition.%Id(), couple.%Id(), .st)
	    	
	    	if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("SaveParticipantError"," | "_st))
	    }
	    
	    if (data.type = "wdsf"){
	    	if (##class(Dance.Data.CoupleWDSFInfo).CommonIdxExists(competition.Tournament.%Id(), couple.%Id())){
	    		set coupleInfo = ##class(Dance.Data.CoupleWDSFInfo).CommonIdxOpen(competition.Tournament.%Id(), couple.%Id())
	    	}
	    	else{
	    		set coupleInfo = ##class(Dance.Data.CoupleWDSFInfo).%New()
	    	}
	    	
	    	set coupleInfo.Couple = couple
	    	set coupleInfo.Tournament = competition.Tournament
	    	
	    	set coupleInfo.ManDOB = $ZDH(data.man.dob, 3)
	    	set coupleInfo.WomanDOB = $ZDH(data.woman.dob, 3)
	    	set coupleInfo.City = $ZCVT(data.otherInfo.city, "I", "UTF8")
	    	set coupleInfo.Club = $ZCVT(data.otherInfo.club, "I", "UTF8")
	    	set coupleInfo.MainTrainer = $ZCVT(data.otherInfo.mainTrainer, "I", "UTF8")
	    	set coupleInfo.OtherTrainers = $ZCVT(data.otherInfo.otherTrainers, "I", "UTF8")
	    	
	    	set st = coupleInfo.%Save()
	    	if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("SaveParticipantError"," | "_st))
	    }
      	
      	TCOMMIT
	}
	catch ex {
		TROLLBACK
		set st = ex.AsStatus()
	}
			
	quit st
]]></Implementation>
</Method>

<Method name="RegistrationNewCouple">
<Description>
Registration new couple in the tournament</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	try{
		TSTART
		
		$$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content.Read(),,.data, 1))
      	
      	do ##class(Dance.Data.ParticipantTemp).Create(data,.st)
      	if $$$ISERR(st) $$$ThrowStatus(##class(Dance.Utils.Msg).GetErrorStatus("SaveParticipantError"," | "_st))
      	
      	TCOMMIT
	}
	catch ex {
		TROLLBACK
		set st = ex.AsStatus()
	}
			
	quit st
]]></Implementation>
</Method>

<Method name="WriteCompetitionsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>tournamentId:%String,coupleId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set count = 0
	&sql(SELECT COUNT(ID) INTO :count 
		 FROM Dance_Data.Participant 
		 WHERE Couple = :coupleId AND Competition->Tournament = :tournamentId)
	
	w "{""count"": "_count_"}"
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="WriteInfoAboutOtherRegistrationsToDevice">
<ClassMethod>1</ClassMethod>
<FormalSpec>trnId:%String,manId:%String,womanId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	try{
		set proxy = ##class(%ZEN.proxyObject).%New()
		set manCompetitions = ##class(%ListOfObjects).%New()
		set womanCompetitions = ##class(%ListOfObjects).%New()
	
		&sql(DECLARE Cur2 CURSOR FOR
		 	SELECT DISTINCT Competition->StartDate
		 	FROM Dance_Data.Participant
		 	WHERE Couple->Man = :manId AND Couple->Woman = :womanId AND Competition->Tournament = :trnId)	
		
		&sql(OPEN Cur2)
		for  
		{	
			&sql(FETCH Cur2 INTO :date) 
			quit:(SQLCODE '= 0)
			
			do ##class(Dance.Data.Person).SetCompetitionsOtherTournamentsOnDay(.manCompetitions, trnId, manId, date)		
		
			if (manId '= womanId){
				do ##class(Dance.Data.Person).SetCompetitionsOtherTournamentsOnDay(.womanCompetitions, trnId, womanId, date)
			}
		}
	
		&sql(CLOSE Cur2)
	
		set proxy.manCompetitions = manCompetitions
		set proxy.womanCompetitions = womanCompetitions
		do proxy.%ToJSON()
	}
	catch(ex){
		set st = ex.AsStatus()
	}
	
	quit st
]]></Implementation>
</Method>

<Method name="WriteWDSFOtherInfoForTournamentToDevice">
<ClassMethod>1</ClassMethod>
<FormalSpec>coupleId:%String,trnId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ..GetWDSFOtherInfoForTournament(trnId, coupleId).%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="GetWDSFOtherInfoForTournament">
<ClassMethod>1</ClassMethod>
<FormalSpec>trnId:%String,coupleId:%String</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set id = ""
		
	&sql(SELECT ID INTO :id 
		 FROM Dance_Data.CoupleWDSFInfo 
		 WHERE Tournament = :trnId AND Couple = :coupleId)
	
	quit ..ConvertWDSFOtherInfoToProxyObject(##class(Dance.Data.CoupleWDSFInfo).%OpenId(id))
]]></Implementation>
</Method>

<Method name="GetFreshestWDSFOtherInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec>coupleId:%String</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set id = ""
		
	&sql(SELECT ID INTO :id 
		 FROM Dance_Data.CoupleWDSFInfo 
		 WHERE Couple = :coupleId
		 ORDER BY Created DESC)
	
	quit ..ConvertWDSFOtherInfoToProxyObject(##class(Dance.Data.CoupleWDSFInfo).%OpenId(id))
]]></Implementation>
</Method>

<Method name="ConvertWDSFOtherInfoToProxyObject">
<ClassMethod>1</ClassMethod>
<FormalSpec>coupleInfo:Dance.Data.CoupleWDSFInfo</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	if '$ISOBJECT(coupleInfo) quit proxy
	
	set proxy.id = coupleInfo.%Id()
	set proxy.coupleId = coupleInfo.Couple.%Id()
	set proxy.tournamentId = coupleInfo.Tournament.%Id()
	set proxy.manDob = $ZD(coupleInfo.ManDOB, 3)
	set proxy.womanDob = $ZD(coupleInfo.WomanDOB, 3)
	set proxy.city = coupleInfo.City
	set proxy.club = coupleInfo.Club
	set proxy.mainTrainer = coupleInfo.MainTrainer
	set proxy.otherTrainers = coupleInfo.OtherTrainers
	
	quit proxy
]]></Implementation>
</Method>

<Method name="Test">
<ClassMethod>1</ClassMethod>
<FormalSpec>aaa:%String,obj:%ZEN.proxyObject=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	w !,"isObject(obj)="_$ISOBJECT(obj)
]]></Implementation>
</Method>
</Class>
</Export>
