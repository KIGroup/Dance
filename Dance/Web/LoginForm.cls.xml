<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Web.LoginForm">
<Description>
Created using the page template: Default</Description>
<Super>%ZEN.Component.page</Super>
<TimeCreated>63288,68706.491812</TimeCreated>

<Parameter name="APPLICATION">
<Description>
Имя приложения, которому принадлежит эта страница.</Description>
</Parameter>

<Parameter name="PAGENAME">
<Description>
Отображаемое имя для нового приложения.</Description>
</Parameter>

<Parameter name="DOMAIN">
<Description>
Домен, используемый для локализации.</Description>
</Parameter>

<Property name="UrlData">
<Type>%ZEN.Datatype.string</Type>
<Parameter name="ZENURL" value="urlData"/>
</Property>

<XData name="Style">
<Description>
Этот блок Style содержит определение CSS стиля страницы.</Description>
<Data><![CDATA[
<style type="text/css">
</style>
]]></Data>
</XData>

<XData name="Contents">
<Description>
Этот XML блок описывает содержимое этой страницы.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<page id="content" hidden="true" xmlns="http://www.intersystems.com/zen" title="">
<loginForm align="center" cellStyle="padding:5px;" id="form"> 
<text id="userName" label="User:" name="CacheUserName" value=""/> 
<password id="userPass" label="Pwd:" name="CachePassword" value=""/> 
<submit caption="Login"/> 
</loginForm> 
</page>
]]></Data>
</XData>

<Method name="onloadHandler">
<Description>
This client event, if present, is fired when the page is loaded.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[


function setCookie(name, value, options) {
  options = options || {};
 
  var expires = options.expires;
 
  if (typeof expires == "number" && expires) {
    var d = new Date();
    d.setTime(d.getTime() + expires*1000);
    expires = options.expires = d;
  }
  if (expires && expires.toUTCString) {
    options.expires = expires.toUTCString();
  }
 
  value = encodeURIComponent(value);
 
  var updatedCookie = name + "=" + value;
 
  for(var propName in options) {
    updatedCookie += "; " + propName;
    var propValue = options[propName];   
    if (propValue !== true) {
      updatedCookie += "=" + propValue;
     }
  }
 
  document.cookie = updatedCookie;
}
	
	setCookie('urlData', window.location.toString(), {expires: 10});
	zenPage.getComponentById('userName').setProperty('value','');
	zenPage.getComponentById('userPass').setProperty('value','');
	
	if (zenPage.UrlData == 'admin'){
		zenPage.getComponentById('content').setHidden(0);	
		return;	
	}
	
	zenPage.getComponentById('form').submit();
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<Description><![CDATA[
This callback is called after the server-side page 
object and all of its children are created.<br/>
Subclasses can override this to add, remove, or modify 
items within the page object model, or to provide values
for controls.]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..UrlData=1
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
