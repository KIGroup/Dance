<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="dance/js/controllers/MainCtrl.js" application="/csp/dance/" default="1"><![CDATA[
'use strict';
//

/*===========================================================================================
Главный контроллер, работа с языком и меню
===========================================================================================*/

controllersModule.controller('MainCtrl', function($scope, $cookies, $filter, $window, OtherSrvc, UtilsSrvc){
    $scope.pageStore = {};
    
    $scope.getLocalString = function(word){
		return $filter('localize')(word);
	};
    
    $scope.menu = {admin: ($cookies.admin === 'true'),
                   readOnlyMode: ($cookies.readOnlyMode === 'true'),
                   loginCaption: ($cookies.admin === 'true' ? 'Выход' : 'Вход')};
    
    $scope.menu.pages = {selected: {},
	    				 tournaments: {id: 'tournaments', url: '#/tournaments'           , css: '', name: $filter('localize')('Tournaments')},
                         entities   : {id: 'entities'   , url: '#/entities/agecategories', css: '', name: $filter('localize')('Entities'), 
                                            childrens: {ageCategories : {id: 'ageCategories', url: '#/entities/agecategories', css: '', name: $filter('localize')('Age categories'), parentId: '#/entities/agecategories'},
                                                        dancerClasses : {id: 'dancerClasses', url: '#/entities/dancerclasses', css: '', name: $filter('localize')('Dancer classes'), parentId: '#/entities/dancerclasses'}
                                                        }}
                        };

    $scope.menu.selectMenu = function(menuItem){
        $scope.menu.pages.selected = menuItem;
    };

    $scope.menu.loadLanguages = function(){
        OtherSrvc.getLanguages().then(
                function(data, status, headers, config){
                    $scope.menu.languages = data.children;
                    var idx = UtilsSrvc.getIndexes($scope.menu.languages, 'code', AppSettings.lang ? AppSettings.lang : 'ru');
                    if (idx.length != 0) 
                        $scope.menu.lang = $scope.menu.languages[idx[0]];
                    
                },
                function(data, status, headers, config){
                    //$scope.page.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
                });
    };

    $scope.menu.switchLang = function(lang){
        if ($cookies.lang == lang.code)
            return;
            
        $cookies['lang'] = lang.code;
        $window.location.reload();
    };

    // Вход - выход
    $scope.menu.login = function(){
        $scope.menu.admin = ($cookies.admin === 'true');
        
        OtherSrvc.checkAdmin($scope.menu.admin === true ? 0: 1).then(
            function(data){
                if (data.privileges=='read'){
                    $cookies['readOnlyMode'] = 'true';
                    $scope.menu.readOnlyMode = true;
                }
                else{
                    $cookies['readOnlyMode'] = 'false';
                    $scope.menu.readOnlyMode = false;
                }
                
                $scope.menu.admin = true;
                $scope.menu.loginCaption = 'Выход';
                $cookies['admin'] = 'true';
            },
            function(response){
                $scope.menu.admin = false;
                $cookies['admin'] = 'false';
                $cookies['readOnlyMode'] = 'false';
                $scope.menu.readOnlyMode = false;
                $scope.menu.loginCaption = 'Вход';
            });
    }

    $scope.menu.loadLanguages();
    $scope.menu.admin = true;
    $scope.menu.readOnlyMode = true;
});

]]></CSP>
</Export>
