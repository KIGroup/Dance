<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="dance/js/controllers/RegistrationCtrl.js" application="/csp/dance/" default="1"><![CDATA[
'use strict';
//

/*===========================================================================================

===========================================================================================*/

controllersModule.controller('RegistrationCtrl', function($scope, $routeParams, $filter, UtilsSrvc, OtherSrvc, TournamentSrvc, CompetitionSrvc, TournamentRankSrvc, TournamentStatusSrvc, CoupleSrvc){
	//$scope.menu.selectMenu('tournaments');;

	$scope.page = {};
    $scope.page.competitionTable = {};
    $scope.page.oldCouple = {male: {},
                             female: {}}; 
                             
    $scope.page.newCouple = {btnNextVisible: true,
                             male: {dob: '1980-01-15'},
                             female: {dob: '1980-01-15'}};  

    //=============== TEST DATA =========================================
    $scope.page.oldCouple.male.min = '115061';
    $scope.page.oldCouple.female.min = '115030';
    
    $scope.page.newCouple.male.lastName = 'Popov';
    $scope.page.newCouple.male.firstName = 'Ivan';
    $scope.page.newCouple.male.min = 123234;

    $scope.page.newCouple.female.lastName = 'Egorova';
    $scope.page.newCouple.female.firstName = 'Svetlana';
    $scope.page.newCouple.female.min = 734543;

    $scope.page.newCouple.countryId = 34;
    $scope.page.newCouple.city = 'Moscow';
    $scope.page.newCouple.trainerFirst = 'Trainer 1';
        
    //=============== TEST DATA =========================================

	
 	if (!$scope.pageStore.registration) $scope.pageStore.registration = {grid:{}};

    
    $scope.page.init = function(){
        //  
    	// Competition table
    	//
        $scope.page.competitionTable.columns = [
                          {name: 'Date'        , sqlName: 'StartDate'               , isSorted: true , isSortable: true , isDown: true ,  isSearched: false ,  isSearchable: false, filter: 'date'},
                          {name: 'Time'        , sqlName: 'StartTime'               , isSorted: false, isSortable: true , isDown: true ,  isSearched: false ,  isSearchable: false},
                          {name: 'Discipline'  , sqlName: 'Discipline->Name->Value' , isSorted: false, isSortable: true , isDown: true ,  isSearched: false ,  isSearchable: false},
                          {name: 'Age category', sqlName: 'AgeCategory'             , isSorted: false, isSortable: false, isDown: true ,  isSearched: false ,  isSearchable: false},
                          {name: 'Class'       , sqlName: ''                        , isSorted: false, isSortable: false, isDown: true ,  isSearched: false ,  isSearchable: false},
                          {name: 'Price'       , sqlName: 'Price'                   , isSorted: false, isSortable: true , isDown: true ,  isSearched: false ,  isSearchable: false}];
        
        $scope.page.competitionTable.properties = [
                          {name:'startDate', filter: 'date', filterParam: $filter('localize')('d MMMM y')},
                          {name:'startTime'},
                          {name:'discipline.name'},
                          {name:'ageCategory.name'},
                          {name:'dancerClassesString', calculate: function(item){
                                                            item.dancerClassesString = '';
                                                            for(var i=0; i < item.dancerClasses.length; i++){
                                                                item.dancerClassesString = item.dancerClassesString + ', ' + item.dancerClasses[i].name;
                                                            }

                                                            item.dancerClassesString = item.dancerClassesString.substring(2, item.dancerClassesString.length);
                                                        }},
                          {name:'price'}];

        $scope.page.competitionTable.pageSize = 1000;
        $scope.page.competitionTable.pageCurr = 1;
        $scope.page.competitionTable.itemsTotal = 0;
        $scope.page.competitionTable.selectable = false;
        $scope.page.competitionTable.selectedItems = [];
        $scope.page.competitionTable.multiSelectMode = true;
        $scope.page.competitionTable.forciblyUpdate = 0;
    };

    /// Load Tournament by ID
    $scope.page.loadTournament = function(id){
        TournamentSrvc.getById(id).then(
            function(data){
                $scope.page.tournament = data;
                $scope.page.competitionTable.refresh();
            },
            function(data, status, headers, config){
                $scope.page.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });
    };

    /// Load All Competitions in Tournament 
    $scope.page.competitionTable.loadItems = function(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText){
        if ($scope.page.competitionTable.avialableMode){
            CompetitionSrvc.getAllAvialableForGrid(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, 
                {newCoupleMale: $scope.page.newCouple.male,
                 oldCoupleMale: $scope.page.oldCouple.male,
                 oldCoupleFemale: $scope.page.oldCouple.female,
                 isOldCouple: !$scope.page.oldCouple.tabDisabled, 
                 tournamentId: $scope.page.tournament.id}).then(
                function(data){
                    data = data.children;
                    $scope.page.competitionTable.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                    $scope.page.competitionTable.itemsTotal = data.itemsTotal;
                    $scope.page.competitionTable.items = data.items; 
                    $scope.page.competitionTable.onSelect(null);
                },
                function(data, status, headers, config){
                    $scope.page.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                });
        }
        else{
            CompetitionSrvc.getAllForGrid(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, {date: '', tournamentId: $scope.page.tournament.id}).then(
                function(data){
    	            data = data.children;
                    $scope.page.competitionTable.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                    $scope.page.competitionTable.itemsTotal = data.itemsTotal;
                    $scope.page.competitionTable.items = data.items; 
                    $scope.page.competitionTable.caption = $filter('localize')('All competitions');
                },
                function(data, status, headers, config){
                    $scope.page.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                });
        }
    };


    /// Load All Avialable Competitions in Tournament
    $scope.page.competitionTable.loadAvialableItems = function(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText){
        
    };

    $scope.page.competitionTable.onSelect = function(item){
        $scope.page.competitionTable.caption = $filter('localize')('Avialable competitions for couple.') + ' ' + $filter('localize')('Selected %1 of %2.')
                                               .replace(/%1/g, $scope.page.competitionTable.selectedItems.length)
                                               .replace(/%2/g, $scope.page.competitionTable.items.length);
                                               
    };

    /// Refresh competition table
    $scope.page.competitionTable.refresh = function(){ 
    	$scope.page.competitionTable.forciblyUpdate++; 
    };
  
    /// Load WDSF Countries
    $scope.page.loadCountries = function(){
        OtherSrvc.getCountries().then(
            function(data){
                $scope.page.countries = data.children;
            },
            function(data, status, headers, config){
                $scope.page.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });
    };


    ///==========================================================================================================================================================================
    /// OLD COUPLE                                                                                                                                                     OLD COUPLE 
    ///==========================================================================================================================================================================
       
    $scope.page.oldCouple.search = function(manNum, womenNum){
        CoupleSrvc.getByNumbers(manNum, womenNum).then(
            function(data){
                $scope.page.oldCouple.exists = true;
                $scope.page.oldCouple.male = data.man;
                $scope.page.oldCouple.female = data.women;
                $scope.page.oldCouple.otherInfo = data.otherInfo

                $scope.page.newCouple.tabDisabled = true;  
                $scope.page.competitionTable.avialableMode = true;
                $scope.page.competitionTable.selectable = true;
                $scope.page.competitionTable.refresh();
            },
            function(data, status, headers, config){
                $scope.page.oldCouple.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });  
    };

    $scope.page.oldCouple.clear = function(){
        $scope.form_oldCouple.$setPristine(); 
        $scope.page.oldCouple.exists = false;
        $scope.page.oldCouple.male={}; 
        $scope.page.oldCouple.female={}; 
        $scope.page.oldCouple.alert.visible=false;


        $scope.page.newCouple.tabDisabled = false;  
        $scope.page.competitionTable.avialableMode = false;
        $scope.page.competitionTable.selectedItems = [];
        $scope.page.competitionTable.selectable = false;
        $scope.page.competitionTable.refresh();  
    };

    $scope.page.oldCouple.register = function(){
        CoupleSrvc.registrationExists({man: $scope.page.oldCouple.male, women: $scope.page.oldCouple.female, competitions: $scope.page.competitionTable.selectedItems}).then(
            function(data){
                $scope.page.oldCouple.alert = UtilsSrvc.getAlert('Done!', 'Registration was successful!', 'info', true);
            	$scope.page.competitionTable.selectedItems=[];
            	$scope.page.competitionTable.refresh();  
            },
            function(data, status, headers, config){
                $scope.page.oldCouple.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });  
    };

    ///==========================================================================================================================================================================
    /// NEW COUPLE                                                                                                                                                     NEW COUPLE 
    ///==========================================================================================================================================================================

    $scope.page.newCouple.next = function(){
        $scope.page.oldCouple.tabDisabled = true;
        $scope.page.newCouple.fieldsDisabled = true;
        $scope.page.newCouple.btnBackVisible = true;
        $scope.page.newCouple.btnNextVisible = false;
        $scope.page.newCouple.btnRegisterVisible = true;

        $scope.page.competitionTable.avialableMode = true;
        $scope.page.competitionTable.selectable = true;
        $scope.page.competitionTable.refresh();
    };

    $scope.page.newCouple.back = function(){
        $scope.page.oldCouple.tabDisabled = false;  
        $scope.page.newCouple.fieldsDisabled = false;
        $scope.page.newCouple.btnBackVisible = false;
        $scope.page.newCouple.btnNextVisible = true;
        $scope.page.newCouple.btnRegisterVisible = false;

        $scope.page.competitionTable.avialableMode = false;
        $scope.page.competitionTable.selectable = false;
        $scope.page.competitionTable.selectedItems = [];
        $scope.page.competitionTable.refresh();
    };

    $scope.page.newCouple.register = function(){
        alert('new register');
    };


    


    $scope.page.init();
    $scope.page.loadCountries();
    $scope.page.loadTournament($routeParams.tournamentId);
});

]]></CSP>
</Export>
