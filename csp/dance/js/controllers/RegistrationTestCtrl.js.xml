<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="dance/js/controllers/RegistrationTestCtrl.js" application="/csp/dance/" default="1"><![CDATA[
'use strict';
//                      

/*===========================================================================================
Registration         
===========================================================================================*/

controllersModule.controller('RegistrationTestCtrl', function($scope, $timeout, $location, $window, $routeParams, $filter, UtilsSrvc, OtherSrvc, PersonSrvc, TournamentSrvc, CompetitionSrvc, TournamentRankSrvc, TournamentStatusSrvc, RegistrationSrvc, CoupleSrvc){
	$scope.menu.pages.selected = {};
    $scope.menu.shortMenu = true;

    $scope.pageStore.registration = $scope.pageStore.registration || {grid:{}};  
    
    $scope.tabUDSR = {
        searchForm: {}
    };

    $scope.tabWDSF = {
        searchForm: {},
        formCouple: {
            btnBackVisible: true,
            btnNextVisible: true
        },
        formSingle: {
            btnBackVisible: true,
            btnNextVisible: true
        }
    };
    
    $scope.tabOTHER = {
        couple: {},
        athlete: null,
        genders: [
            {name: $filter('localize')('Мужской'), code: 'Male'}, 
            {name: $filter('localize')('Женский'), code: 'Female'}
        ],
        formCouple: {
            btnBackVisible: true,
            btnNextVisible: true
        },
        formSingle: {
            btnBackVisible: true,
            btnNextVisible: true
        }  
    };

    $scope.competitionTable = {};

    $scope.init = function(){
        //    
        // Competition table
        //
        $scope.competitionTable.columns = [
                          {name: 'Дата', sqlName: 'StartDate', isSorted: true , isSortable: false , isDown: true , isSearched: false , isSearchable: false, filter: 'date', captionStyle: {width: '130px'}},
                          {name: 'Время', sqlName: 'StartTime', isSorted: false, isSortable: false , isDown: true , isSearched: false , isSearchable: false, captionStyle: {width: '70px'}},
                          {name: 'Название', sqlName: 'Name->Value', isSorted: false, isSortable: false , isDown: true , isSearched: false , isSearchable: false},
                          {name: 'Программа', sqlName: 'Discipline->Name->Value', isSorted: false, isSortable: false , isDown: true , isSearched: false , isSearchable: false},
                          {name: 'Возрастная группа', sqlName: 'AgeCategory', isSorted: false, isSortable: false, isDown: true , isSearched: false , isSearchable: false},
                          {name: 'Класс', sqlName: '', isSorted: false, isSortable: false, isDown: true , isSearched: false , isSearchable: false},
                          {name: 'Тип', sqlName: 'Type->Name->Value', isSorted: false, isSortable: false , isDown: true , isSearched: false , isSearchable: false, captionStyle: {width: '50px'}},
                          {name: 'Цена', sqlName: 'Price', isSorted: false, isSortable: false , isDown: true , isSearched: false , isSearchable: false, captionStyle: {textAlign: 'right', width: '50px'}}];
        
        $scope.competitionTable.properties = [
                          {name:'startDate', filter: 'date', filterParam: $filter('localize')('d MMMM y')},
                          {name:'startTime'},
                          {name:'name'},
                          {name:'discipline.name'},
                          {name:'ageCategory.fullName', calculate: function(item){
                                                       item.ageCategory.fullName = item.ageCategory.name + ' (' + item.ageCategory.minAge + ' - ' + item.ageCategory.maxAge + ')';
                                                    }},
                          {name:'dancerClassesString', calculate: function(item){
                                                            item.dancerClassesString = '';
                                                            for(var i=0; i < item.dancerClasses.length; i++){
                                                                item.dancerClassesString = item.dancerClassesString + ', ' + item.dancerClasses[i].name;
                                                            }

                                                            item.dancerClassesString = item.dancerClassesString.substring(2, item.dancerClassesString.length);
                                                        }},
                          {name:'type.name'},
                          {name:'price', cellStyle: {textAlign: 'right'}}];

        $scope.competitionTable.pageSize = 1000; 
        $scope.competitionTable.pageCurr = 1;
        $scope.competitionTable.itemsTotal = 0;
        $scope.competitionTable.selectable = false;
        $scope.competitionTable.selectedItems = [];
        $scope.competitionTable.multiSelectMode = true;
        $scope.competitionTable.forciblyUpdate = 0;

        $scope.pageStore.registration.grid.tableShortView = $scope.pageStore.registration.grid.tableShortView == null ? true : $scope.pageStore.registration.grid.tableShortView;
        
        if ($scope.pageStore.registration.grid.tableShortView){
            $scope.competitionTable.setHiddenCoulumns(true);
        }
        else{
            $scope.competitionTable.setHiddenCoulumns(false);
        }  

        // Load tournament
        $scope.loadTournament($routeParams.tournamentId);
    };

      /// Load All Competitions in Tournament  
    $scope.competitionTable.loadItems = function(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText){
        if (!$scope.tournament)
            return;
         
        $scope.competitionTable.items = [];
        $scope.competitionTable.itemsStatus = $filter('localize')('Идет загрузка групп...');

        var dataSending= {
            type: $scope.selectedTab, /* UDSR, WDSF, OTHER*/
            tournamentId: $scope.tournament.id
        };

        if ($scope.competitionTable.avialableMode){
            dataSending.couple = $scope['tab' + $scope.selectedTab].couple || null;
            dataSending.athlete = $scope['tab' + $scope.selectedTab].athlete || null;
        
            CompetitionSrvc.getAllAvialableForGrid(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, dataSending).then(
                function(data){
                    data = data.children;
                    $scope.competitionTable.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                    $scope.competitionTable.itemsTotal = data.itemsTotal;
                    $scope.competitionTable.items = data.items; 
                    $scope.competitionTable.onSelect(null);

                    $scope.competitionTable.itemsStatus = data.items.length == 0 ? $filter('localize')('Нет доступных групп.') : '';
                },
                function(data, status, headers, config){
                    $scope.cmpAlert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                    $scope.competitionTable.itemsStatus = $filter('localize')('Произошла ошибка при загрузке групп.');
                });
        }
        else{
            CompetitionSrvc.getAllForGrid(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, dataSending).then(
                function(data){
                    data = data.children;
                    $scope.competitionTable.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                    $scope.competitionTable.itemsTotal = data.itemsTotal;
                    $scope.competitionTable.items = data.items; 
                    $scope.competitionTable.caption = $filter('localize')('Все группы');

                    $scope.competitionTable.itemsStatus = data.items.length == 0 ? $filter('localize')('Нет доступных групп.') : '';
                },
                function(data, status, headers, config){
                    $scope.cmpAlert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                    $scope.competitionTable.itemsStatus = $filter('localize')('Произошла ошибка при загрузке групп.');
                });
        }
    };

    $scope.competitionTable.setHiddenCoulumns = function(value){
        var indexes = [1,3,4,5,6];
        for(var n=0; n < indexes.length; n++){
            $scope.competitionTable.columns[indexes[n]].hidden = value;     
        }
    };

    // Select competition
    $scope.competitionTable.onSelect = function(item){
        $scope.competitionTable.caption = $filter('localize')('Доступные группы для регистрации.') + ' ' + $filter('localize')('Выбрано %1 из %2.')
                                               .replace(/%1/g, $scope.competitionTable.selectedItems.length)
                                               .replace(/%2/g, $scope.competitionTable.items.length);                                    
    };

    /// Refresh competition table  
    $scope.competitionTable.refresh = function(){ 
        $scope.competitionTable.forciblyUpdate++; 
    };

    $scope.competitionTable.getSelectedIdArray = function(){ 
        var idArray = [];
        for (var i=0; i < $scope.competitionTable.selectedItems.length; i++){
            idArray.push($scope.competitionTable.selectedItems[i].id);
        } 

        return idArray;
    };

    /// Load Tournament by ID   
    $scope.loadTournament = function(id){
        TournamentSrvc.getById(id).then(
            function(data){
                $scope.tournament = data;
                $scope.tabUDSR.visible = data.tabUDSRAllowed == 1;
                $scope.tabWDSF.visible = data.tabWDSFAllowed == 1;
                $scope.tabOTHER.visible = data.tabOtherAllowed == 1;
                $scope.competitionTable.refresh();
            },
            function(data, status, headers, config){
                $scope.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });
    };


    // ===========================================================================================================================================
    // Tab UDSR                                                                                                                           Tab UDSR
    // ===========================================================================================================================================
    $scope.tabUDSR.select = function(){
        $scope.selectedTab = 'UDSR';
        console.log('tabUDSR.select');
        $scope.competitionTable.refresh();
    };

    $scope.tabUDSR.searchForm.search = function(manNumber, womanNumber){
        if (manNumber == '' && womanNumber == '')
            return;

        $scope.tabUDSR.searchForm.processing = true;

        var afterSuccess = function(){
            $scope.tabWDSF.disabled = true;
            $scope.tabOTHER.disabled = true;
            $scope.tabUDSR.searchForm.processing = false;
            $scope.competitionTable.avialableMode = true;
            $scope.competitionTable.selectable = true; 
            $scope.competitionTable.refresh(); 
        };

        if (manNumber != '' && womanNumber != ''){
            CoupleSrvc.getUDSRByNumbers(manNumber, womanNumber).then(
                function(data){
                    afterSuccess();
                    $scope.tabUDSR.couple = data;
                },
                function(data, status, headers, config){
                    $scope.tabUDSR.searchForm.processing = false;
                    $scope.tabUDSR.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                });  
        }
        else{
            PersonSrvc.getByUDSRNumber(manNumber ? manNumber : womanNumber).then(
                function(data){
                    afterSuccess();
                    $scope.tabUDSR.athlete = data;
                },
                function(data, status, headers, config){
                    $scope.tabUDSR.searchForm.processing = false;
                    $scope.tabUDSR.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                });  
        }
    };

    $scope.tabUDSR.searchForm.clear = function(){
        $scope.form_udsrSearch.$setPristine();
        $scope.tabUDSR.searchForm.manNumber = '';
        $scope.tabUDSR.searchForm.womanNumber = '';
        $scope.tabUDSR.couple = null;
        $scope.tabUDSR.athlete = null; 
    };

    $scope.tabUDSR.back = function(){
        $scope.tabUDSR.searchForm.clear();
        $scope.tabWDSF.disabled = false;
        $scope.tabOTHER.disabled = false;
        $scope.tabUDSR.searchForm.processing = false;
        $scope.competitionTable.avialableMode = false;
        $scope.competitionTable.selectable = false;
        $scope.competitionTable.refresh();  
    };

    $scope.tabUDSR.registration = function(){
        console.log('udsr reg');
    };


    // ===========================================================================================================================================
    // Tab WDSF                                                                                                                           Tab WDSF
    // ===========================================================================================================================================
    $scope.tabWDSF.select = function(){
        $scope.selectedTab = 'WDSF';
        $scope.competitionTable.refresh();
    };

    $scope.tabWDSF.searchForm.search = function(manNumber, womanNumber){
        if (manNumber == '' && womanNumber == '')
            return;

        $scope.tabWDSF.searchForm.processing = true;

        var afterSuccess = function(){
            $scope.tabUDSR.disabled = true;
            $scope.tabOTHER.disabled = true;
            $scope.tabWDSF.searchForm.processing = false;
        };

        if (manNumber != '' && womanNumber != ''){
            CoupleSrvc.getWDSFByNumbers(manNumber, womanNumber).then(
                function(data){
                    afterSuccess();
                    $scope.tabWDSF.couple = data;
                    if (data.otherInfo.status != 'Active'){
                        $scope.tabWDSF.formCouple.disabled = true;
                        $scope.tabWDSF.alert = UtilsSrvc.getAlert('Внимание!', 'Статус пары не "Active"! Регистрация пары невозможна.', 'error', true);
                    }
                },
                function(data, status, headers, config){
                    $scope.tabWDSF.searchForm.processing = false;
                    $scope.tabWDSF.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                });  
        }
        else{
            PersonSrvc.getByWDSFNumber(manNumber ? manNumber : womanNumber).then(
                function(data){
                    afterSuccess();
                    $scope.tabWDSF.athlete = data;
                },
                function(data, status, headers, config){
                    $scope.tabWDSF.searchForm.processing = false;
                    $scope.tabWDSF.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
                });  
        }
    };

    $scope.tabWDSF.searchForm.clear = function(){
        $scope.form_wdsfSearch.$setPristine();
        $scope.tabWDSF.searchForm.manNumber = '';
        $scope.tabWDSF.searchForm.womanNumber = '';
        $scope.tabWDSF.couple = null;
        $scope.tabWDSF.athlete = null; 
    };

    $scope.tabWDSF.formCouple.back = function(){
        if ($scope.tabWDSF.formCouple.btnRegistrationVisible){
            $scope.tabWDSF.formCouple.btnNextVisible = true;
            $scope.tabWDSF.formCouple.btnRegistrationVisible = false;
        }
        else{
            $scope.tabWDSF.searchForm.clear();
            $scope.tabUDSR.disabled = false;
            $scope.tabOTHER.disabled = false;
            $scope.tabWDSF.searchForm.processing = false;    
        }

        $scope.tabWDSF.alert.visible = false;
        $scope.tabWDSF.formCouple.disabled = false;
        $scope.competitionTable.avialableMode = false;
        $scope.competitionTable.selectable = false;
        $scope.competitionTable.refresh();  
    };

    $scope.tabWDSF.formCouple.next = function(){
        $scope.tabWDSF.couple.man.dob = UtilsSrvc.getValidDate($scope.tabWDSF.couple.man.dob);
        $scope.tabWDSF.couple.woman.dob = UtilsSrvc.getValidDate($scope.tabWDSF.couple.woman.dob);
        
        if ($scope.tabWDSF.couple.man.dob == "" || $scope.tabWDSF.couple.woman.dob == ""){
            return;
        }

        $scope.tabWDSF.formCouple.disabled = true;
        $scope.tabWDSF.formCouple.btnNextVisible = false;
        $scope.tabWDSF.formCouple.btnRegistrationVisible = true;
        
        $scope.competitionTable.selectable = true; 
        $scope.competitionTable.avialableMode = true;
        $scope.competitionTable.refresh();  
    };

    $scope.tabWDSF.formSingle.back = function(){
        if ($scope.tabWDSF.formSingle.btnRegistrationVisible){
            $scope.tabWDSF.formSingle.btnNextVisible = true;
            $scope.tabWDSF.formSingle.btnRegistrationVisible = false;
        }
        else{
            $scope.tabWDSF.searchForm.clear();
            $scope.tabUDSR.disabled = false;
            $scope.tabOTHER.disabled = false;
            $scope.tabWDSF.searchForm.processing = false;    
        }

        $scope.tabWDSF.formSingle.disabled = false;
        $scope.competitionTable.avialableMode = false;
        $scope.competitionTable.selectable = false;
        $scope.competitionTable.refresh();  
    };
  
    $scope.tabWDSF.formSingle.next = function(){
        $scope.tabWDSF.athlete.dob = UtilsSrvc.getValidDate($scope.tabWDSF.athlete.dob);
        
        if ($scope.tabWDSF.athlete.dob == ""){
            return;
        }

        $scope.tabWDSF.formSingle.disabled = true;
        $scope.tabWDSF.formSingle.btnNextVisible = false;
        $scope.tabWDSF.formSingle.btnRegistrationVisible = true;
        
        $scope.competitionTable.selectable = true; 
        $scope.competitionTable.avialableMode = true;
        $scope.competitionTable.refresh();  
    };


    $scope.tabWDSF.registration = function(){
        var postData = {
            competitions: $scope.competitionTable.getSelectedIdArray(),
            couple: $scope.tabWDSF.couple || null,
            athlete: $scope.tabWDSF.athlete || null 
        };

        RegistrationSrvc.WDSF(postData).then(
            function(data){
                $scope.regResponse = data;
                console.log('reg success', data);
            },
            function(data){
                $scope.regResponse = data;
                console.log('reg error', data);
            });  
    };



    // ===========================================================================================================================================
    // Tab OTHER                                                                                                                          Tab WDSF
    // ===========================================================================================================================================
    $scope.tabOTHER.select = function(){
        $scope.selectedTab = 'OTHER';
        $scope.competitionTable.refresh();
    };

    $scope.tabOTHER.formCouple.back = function(){
        if ($scope.tabOTHER.formCouple.btnRegistrationVisible){
            $scope.tabOTHER.formCouple.btnNextVisible = true;
            $scope.tabOTHER.formCouple.btnRegistrationVisible = false;
            $scope.tabOTHER.formCouple.disabled = false;
        }
        else{
            $scope.tabUDSR.disabled = false;
            $scope.tabWDSF.disabled = false;
        }

        $scope.competitionTable.avialableMode = false;
        $scope.competitionTable.selectable = false;
        $scope.competitionTable.refresh();  
    };

    $scope.tabOTHER.formCouple.next = function(){
        $scope.tabOTHER.couple.man.dob = UtilsSrvc.getValidDate($scope.tabOTHER.couple.man.dob);
        $scope.tabOTHER.couple.woman.dob = UtilsSrvc.getValidDate($scope.tabOTHER.couple.woman.dob);
        
        if ($scope.tabOTHER.couple.man.dob == "" || $scope.tabOTHER.couple.woman.dob == ""){
            return;
        }

        $scope.tabOTHER.formCouple.disabled = true;
        $scope.tabOTHER.formCouple.btnNextVisible = false;
        $scope.tabOTHER.formCouple.btnRegistrationVisible = true;
        
        $scope.competitionTable.selectable = true; 
        $scope.competitionTable.avialableMode = true;
        $scope.competitionTable.refresh();  
    };

    $scope.tabOTHER.formSingle.back = function(){
        if ($scope.tabOTHER.formSingle.btnRegistrationVisible){
            $scope.tabOTHER.formSingle.btnNextVisible = true;
            $scope.tabOTHER.formSingle.btnRegistrationVisible = false;
            $scope.tabOTHER.formSingle.disabled = false;
        }
        else{
            $scope.tabUDSR.disabled = false;
            $scope.tabOTHER.disabled = false;
        }

        $scope.competitionTable.avialableMode = false;
        $scope.competitionTable.selectable = false;
        $scope.competitionTable.refresh();  
    };

    $scope.tabOTHER.formSingle.next = function(){
        $scope.tabOTHER.athlete.dob = UtilsSrvc.getValidDate($scope.tabOTHER.athlete.dob);
        
        if ($scope.tabOTHER.athlete.dob == ""){
            return;
        }

        $scope.tabOTHER.formSingle.disabled = true;
        $scope.tabOTHER.formSingle.btnNextVisible = false;
        $scope.tabOTHER.formSingle.btnRegistrationVisible = true;
        
        $scope.competitionTable.selectable = true; 
        $scope.competitionTable.avialableMode = true;
        $scope.competitionTable.refresh();  
    };


    $scope.tabOTHER.registration = function(){
        var postData = {
            competitions: $scope.competitionTable.getSelectedIdArray(),
            couple: $scope.tabOTHER.couple || null,
            athlete: $scope.tabOTHER.athlete || null 
        };

        RegistrationSrvc.OTHER(postData).then(
            function(data){
                console.log('reg success', data);
            },
            function(data){
                $scope.tabOTHER.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });  
    };


    // ===========================================================================================================================================
    // Confirm Dialog                                                                                                               Confirm Dialog
    // ===========================================================================================================================================
    $scope.confirmDialog = {};

    $scope.confirmDialog.open = function(type, applyMethod){
        $scope.confirmDialog.data = {};  
        $scope.confirmDialog.data.type = type;
        $scope.confirmDialog.data.couple = angular.copy($scope['tab' + type].couple) || null;
        $scope.confirmDialog.data.athlete = angular.copy($scope['tab' + type].athlete) || null; 
        $scope.confirmDialog.apply = applyMethod;

        $('#ConfirmDialog').modal('show');
        $scope.confirmDialog.visible = true;
    };

    $scope.confirmDialog.close = function(){
        $('#ConfirmDialog').modal('hide');
        $scope.confirmDialog.visible = false;  
    };



    /// Load WDSF Countries
    $scope.loadCountries = function(){
        OtherSrvc.getCountries().then(
            function(data){
                $scope.countries = data.children;
            },
            function(data, status, headers, config){
                $scope.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });
    };

    $scope.loadCountries();
    $scope.init();




    $scope.regResponse = {
    "results":[ {
            "competition": {
                "ageCategory": {
                    "code":"Взрослые",
                    "id":1,
                    "maxAge":99,
                    "minAge":19,
                    "name":"Взрослые"
                },
                "dancerClasses":[ {
                        "code":5,
                        "id":1,
                        "name":"A"
                    }, {
                        "code":4,
                        "id":2,
                        "name":"B"
                    }, {
                        "code":2,
                        "id":3,
                        "name":"C"
                    }, {
                        "code":3,
                        "id":4,
                        "name":"D"
                    }, {
                        "code":6,
                        "id":5,
                        "name":"E"
                    }, {
                        "code":7,
                        "id":6,
                        "name":"H"
                    }, {
                        "code":8,
                        "id":7,
                        "name":"M"
                    }, {
                        "code":9,
                        "id":8,
                        "name":"S"
                    }
                ],
                "discipline": {
                    "code":"Ст",
                    "id":1,
                    "name":"Европейская"
                },
                "id":1,
                "idExternal":1,
                "idInternal":1,
                "isInternational":1,
                "limit":22,
                "name":"Гранприкс Стандард Адульт",
                "participantsCount":0,
                "price":1333,
                "startDate":"2014-08-12",
                "startTime":"12:00",
                "tournament": {
                    "competitionsCount":6,
                    "endDate":"2014-08-14",
                    "fullName":"Кубок Берлина\nГермания",
                    "id":1,
                    "idExternal":1,
                    "idInternal":1,
                    "location": {
                        "cityName":"Стругхард",
                        "country": {
                            "id":78,
                            "name":"Германия"
                        }
                    },
                    "name":"Гераманский турнир",
                    "organizer": {
                        "info":"",
                        "site":""
                    },
                    "participantsCount":0,
                    "participantsUniqueCount":0,
                    "rank": {
                        "code":"МС",
                        "id":3,
                        "name":"Международное соревнование",
                        "shortName":"МС"
                    },
                    "startDate":"2014-08-04",
                    "status": {
                        "code":"Registration",
                        "id":2,
                        "name":"Регистрация"
                    },
                    "tabOtherAllowed":1,
                    "tabUDSRAllowed":1,
                    "tabWDSFAllowed":1
                },
                "type": {
                    "code":"Couples",
                    "id":1,
                    "name":"Пары"
                },
                "wdsf": {
                    "LastModifiedWDSF":"2014-08-13 18:08:22",
                    "LastSyncWDSF":"2014-09-01 18:40:44",
                    "TournamentId":5451,
                    "ageCategory": {
                        "allowedToDance":["ADULT","UNDER 21","RISING STAR"
                        ],
                        "division":"Any",
                        "fromAge":19,
                        "id":10,
                        "maxDob":"1995-12-31",
                        "minDob":"1985-01-01",
                        "name":"ADULT",
                        "toAge":29
                    },
                    "country": {
                        "id":78,
                        "name":"Германия"
                    },
                    "date":"2014-08-12",
                    "discipline":"STANDARD",
                    "division":"Professional",
                    "id":45276,
                    "isSolo":0,
                    "location":"Stuttgart",
                    "status":"Closed",
                    "type":"PD SUPER GRAND PRIX"
                }
            },
            "otherInfo": {
                "code":2011,
                "message":"Статус группы не позволяет выполнить регистрацию.",
                "otherInfo": {
                    "competition": {
                        "ageGroup":"ADULT",
                        "country":"Germany",
                        "date":"2014-08-12",
                        "discipline":"STANDARD",
                        "division":"Professional",
                        "id":45276,
                        "isSolo":0,
                        "lastModifiedWDSF":"2014-08-13 18:08:22",
                        "lastSyncWDSF":"2014-09-01 18:40:44",
                        "location":"Stuttgart",
                        "selfLink":"http:\/\/localhost:57772\/csp\/wdsfcontroller\/admin\/competition\/45276",
                        "status":"Closed",
                        "tournament": {
                            "ageGroups":"YOUTH, ADULT, SENIOR I, MASTER CLASS I, MASTER CLASS II, SENIOR II, SENIOR III, SENIOR IV",
                            "competitionsCount":14,
                            "country":"Germany",
                            "disciplines":"LATIN, STANDARD",
                            "endDate":"2014-08-16",
                            "id":5451,
                            "selfLink":"http:\/\/localhost:57772\/csp\/wdsfcontroller\/admin\/tournament\/5451",
                            "startDate":"2014-08-12",
                            "types":"GRAND SLAM, OPEN, PD, PD SUPER GRAND PRIX"
                        },
                        "type":"PD SUPER GRAND PRIX"
                    }
                },
                "status":"Ошибка"
            },
            "participantId":"",
            "status":"0"
        }
    ],
    "status":1
    };
});  
]]></CSP>
</Export>
