<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="dance/js/controllers/CompetitionParticipantsCtrl.js" application="/csp/dance/" default="1"><![CDATA[
'use strict';
//csddddd
 
/*===========================================================================================
Competition Participants 
===========================================================================================*/

controllersModule.controller('CompetitionParticipantsCtrl', function($scope, $location, $routeParams, $filter, UtilsSrvc, CompetitionSrvc, ParticipantSrvc){
	//$scope.menu.selectMenu('tournaments');;
	$scope.page = {};
  $scope.page.participantTable = {};

 	if (!$scope.pageStore.participants) $scope.pageStore.participants = {grid:{}};

    
    $scope.page.init = function(){
      //    
    	// Participant table
    	//  
        $scope.page.participantTable.columns = [
                          {name: 'Партнер / партнерша', sqlName: 'Couple->Man->LastName->Value'     , isSorted: true , isSortable: true , isDown: true, isSearched: true , isSearchable: true},
                          {name: 'Class'      , sqlName: '-'                                , isSorted: false, isSortable: false, isDown: true, isSearched: false, isSearchable: false},
                          {name: 'Club / City', sqlName: '-'                                , isSorted: false, isSortable: true , isDown: true, isSearched: false, isSearchable: true},
                          {name: 'Trainers'   , sqlName: '-'                                , isSorted: false, isSortable: false, isDown: true, isSearched: false, isSearchable: false},
                          {name: 'Country'    , sqlName: 'Couple->Man->Country->Name->Value', isSorted: false, isSortable: true , isDown: true, isSearched: false, isSearchable: true},
                          {name: 'Группы участников'    , sqlName: '-'                                , isSorted: false, isSortable: false, isDown: true, isSearched: false, isSearchable: false, captionStyle: {textAlign: 'center'}}];
        
        $scope.page.participantTable.properties = [
        				  {name:'couple.fullName', calculate: function(item){ 
                                                        if (item.couple.man.id == item.couple.woman.id){
                                                            item.couple.fullName = item.couple.man.lastName + ' ' + item.couple.man.firstName + '\n';
                                                        } 
                                                        else{
                                                            item.couple.fullName = item.couple.man.lastName + ' ' + item.couple.man.firstName;
                                                            item.couple.fullName += '\n' + item.couple.woman.lastName + ' ' + item.couple.woman.firstName;
                                                        }
                                                    }},
                          {name:'couple.class', calculate: function(item){
                                                    if ($scope.page.competition.discipline.code == 'Ла'){
                                                        item.couple.class = item.couple.man.laClass.name + '\n' + item.couple.woman.laClass.name;
                                                    }
                                                    else if($scope.page.competition.discipline.code == 'Ст'){
                                                        item.couple.class = item.couple.man.stClass.name + '\n' + item.couple.woman.stClass.name;
                                                    }
                                                }},
                          {name:'couple.otherInfo.clubAndCity', calculate: function(item){
                                                                  item.couple.otherInfo.clubAndCity = item.couple.otherInfo.club + '\n' + item.couple.otherInfo.city;
                                                                }}, 
                          {name:'couple.otherInfo.trainers', calculate: function(item){
                                                               item.couple.otherInfo.trainers = item.couple.otherInfo.mainTrainer + (item.couple.otherInfo.otherTrainers=='' ? '' : (', ' + item.couple.otherInfo.otherTrainers));
                                                             }},
                          {name:'couple.otherInfo.country.name'},
                          {name:'coupleCompetitionsCountString', cellStyle: {textAlign: 'center'}, cellSelectable: true, cellTitle: $filter('localize')('Watch couple groups list'),
                                                getCssClass: function(item){ 
                                                    return 'cellCoupleLink';
                                                }, 
                                                calculate: function(item){
                                                    item.coupleCompetitionsCountString = item.coupleCompetitionsCount + ' »';
                                                },
                                                onClickCell: function(coupleId){
                                                    $location.path("/tournament/" + $scope.page.competition.tournament.id + "/couple/" + coupleId + "/competitions"); 
                                                }}];

        $scope.page.participantTable.pageSize = 15;
        $scope.page.participantTable.pageCurr = 1;
        $scope.page.participantTable.itemsTotal = 0;
        $scope.page.participantTable.selectedItems = [];
        $scope.page.participantTable.multiSelectMode = false;
        $scope.page.participantTable.forciblyUpdate = 0;
    };


    // 
    $scope.page.participantTable.loadItems = function(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText){
        ParticipantSrvc.getAllForGrid(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, {competitionId: $scope.page.competition.id}).then(
            function(data){
	            data = data.children;
                $scope.page.participantTable.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                $scope.page.participantTable.itemsTotal = data.itemsTotal;
                $scope.page.participantTable.items = data.items;
            },
            function(response){
                $scope.page.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };


  	$scope.page.participantTable.refresh = function(){ 
    	$scope.page.participantTable.forciblyUpdate++; 
    };
     
    $scope.page.participantTable.onSelectCell = function(item, property){ 
        if (!item) return;

        property.onClickCell(item.couple.id);
    };
    
    /// Load Competition by ID
    $scope.page.loadCompetition = function(competitionId){
        CompetitionSrvc.getById(competitionId).then(
            function(data){
                $scope.page.competition = data;
                $scope.page.participantTable.refresh();
            },
            function(data, status, headers, config){
                $scope.page.alert = UtilsSrvc.getAlert('Внимание!', data, 'error', true);
            });
    };   

    
    $scope.page.init();
    $scope.page.loadCompetition($routeParams.competitionId);
});

]]></CSP>
</Export>
